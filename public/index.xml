<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Piotr Wittchen</title>
    <link>https://wittchen.io/</link>
    <description>Recent content in About on Piotr Wittchen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Aug 2020 16:49:54 +0200</lastBuildDate>
    
	<atom:link href="https://wittchen.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup</title>
      <link>https://wittchen.io/setup/</link>
      <pubDate>Fri, 14 Aug 2020 17:01:24 +0200</pubDate>
      
      <guid>https://wittchen.io/setup/</guid>
      <description>Here&amp;rsquo;s the list of equipment and software I use personally and professionally:
Server #   W1GB hosting server by cyberfolks.pl  Software #   OS: Arch Linux WM: i3 shell: Zsh + Oh my zsh + Tmux terminal: Gnome Terminal text editor: Vim IDE: IntelliJ IDEA + Android Studio + PyCharm (JetBrains stuff in general) VCS: Git web browser: Brave file manager: Ranger + mc PDF viewer: Zathura image viewer: Sxiv image editing: Gthumb + Pixeluvo music and podcasts: Spotify + spotify-cli-linux videos: VLC RSS reader: Newsboat Excel-like spreadsheets: Libre Office torrent client: Transmission to do list: Nozbe notes: Keep + Git + Physical notebook password manager: Pass presentations: Google Slides calendar: Google Calendar email: Gmail invoices and accounting: InFakt  Configuration #   dotfiles wallpapers  Hardware #   ThinkPad T470S (CPU: Intel i7-7600U, GPU: Intel HD Graphics 620, RAM: 16 GB, SSD: 512 GB) Samsung C34H890WJUX Curved monitor Logitech Bluetooth Keyboard K380 + Keychron K3 Logitech MX Master Mouse Logitech Webcam C925e 1080p JBL Charge 3 speaker Sennheiser Momentum True Wireless headphones Rhode SmartLav microphone + Tracer Digital USB Pro LaCie Rugged Mini 1TB USB 3.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://wittchen.io/contact/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:02 +0200</pubDate>
      
      <guid>https://wittchen.io/contact/</guid>
      <description>If you want to ask me about something, start cooperation, hire me or just say hi, send me a message to piotr@wittchen.io.</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>https://wittchen.io/gh/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:02 +0200</pubDate>
      
      <guid>https://wittchen.io/gh/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Google Play</title>
      <link>https://wittchen.io/gp/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:02 +0200</pubDate>
      
      <guid>https://wittchen.io/gp/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>LinkedIn</title>
      <link>https://wittchen.io/in/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:02 +0200</pubDate>
      
      <guid>https://wittchen.io/in/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>StackOverflow</title>
      <link>https://wittchen.io/so/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:02 +0200</pubDate>
      
      <guid>https://wittchen.io/so/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>https://wittchen.io/talks/</link>
      <pubDate>Fri, 14 Aug 2020 16:30:57 +0200</pubDate>
      
      <guid>https://wittchen.io/talks/</guid>
      <description>If you would like to invite me for the conference or a meetup to give a talk, feel free to contact me!
 2019-01-10 Brain-Computer Interfaces - Science Fiction or Reality? Toast Meetup (Wrocław, Poland) 2018-11-19 Brain-Computer Interfaces - Science Fiction or Reality? Øredev (Malmö, Sweden) 2018-10-20 Is your app really connected? Mobilization (Łódź, Poland) watch video [EN] 2018-09-13 Brain-Computer Interfaces - Science Fiction or Reality? SAP Lunch Talks (Gliwice, Poland) 2018-03-15 Get ready for java.</description>
    </item>
    
    <item>
      <title>Dynamic wallpaper for i3</title>
      <link>https://wittchen.io/posts/dynamic-wallpaper-for-i3/</link>
      <pubDate>Sun, 29 Mar 2020 20:29:36 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/dynamic-wallpaper-for-i3/</guid>
      <description>Some time ago, I was using macOS. The thing I liked about this OS since Mojave version was the dynamic wallpaper feature. Wallpaper representing picture of the Mojave desert in California was dynamically changing during the day. In the morning, we could see the dawn and sunrise, later picture during the midday, in the evening, desert during the dusk and finally picture at night. I liked the fact that wallpaper were adjusting to the time of the day.</description>
    </item>
    
    <item>
      <title>Spotify song in i3 status bar</title>
      <link>https://wittchen.io/posts/spotify-song-in-i3-status-bar/</link>
      <pubDate>Thu, 20 Feb 2020 11:29:13 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/spotify-song-in-i3-status-bar/</guid>
      <description>While customizing my i3 status bar, I wanted to have currently played Spotify song in it. Some time ago, I created an open source script in Python called spotify-cli-linux and I wanted to use it. When we want to put something custom into the i3 status bar, the easiest way to do it, is to save data into the file and then read the file.
I created the following config inside ~/.</description>
    </item>
    
    <item>
      <title>I switched to i3 WM</title>
      <link>https://wittchen.io/posts/i-switched-to-i3wm/</link>
      <pubDate>Sun, 16 Feb 2020 13:16:49 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/i-switched-to-i3wm/</guid>
      <description>Introduction #  From a long time I wanted to try lightweight WM (Window Manager) for Linux. I installed i3 once a few years ago, but I had no idea how to use it, so I just closed this thing and got back to Gnome. Recently, I watched several videos and tutorials about Linux and i3 on youtube, which helped me to learn this WM, how it works and how to use it.</description>
    </item>
    
    <item>
      <title>GitHub Actions in action!</title>
      <link>https://wittchen.io/posts/github-actions-in-action/</link>
      <pubDate>Mon, 04 Nov 2019 14:11:36 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/github-actions-in-action/</guid>
      <description>Recently GitHub introduced really interesting feature to their service called Actions. Actions can be used for automating various tasks related to the repositories like CI, CD, testing, deployment and whatnot. The general concept is as follows: We can create so called action, which can be based on a JavaScript project or a Docker container. We can also use existing actions in the Marketplace. Next, we can create workflow in the yml file, where we define our workflow.</description>
    </item>
    
    <item>
      <title>Fixing font rendering on Firefox and Arch Linux</title>
      <link>https://wittchen.io/posts/fixing-font-rendering-on-firefox-and-arch-linux/</link>
      <pubDate>Fri, 01 Nov 2019 11:57:02 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/fixing-font-rendering-on-firefox-and-arch-linux/</guid>
      <description>After the recent Firefox update (70.0.1 64-bit), I&amp;rsquo;ve got a problem with font rendering on Arch Linux. I&amp;rsquo;ve installed this update probably on 31.10.2019 or 01.11.2019 (I&amp;rsquo;m not exactly sure right now). On several pages (e.g. Facebook or Github) fonts weren&amp;rsquo;t rendered correctly. It looked like fonts without anti-aliasing what was quite ugly.
I figured out that I can go to the Firefox Settings and in the &amp;ldquo;Fonts and Colors&amp;rdquo; section, go to &amp;ldquo;Advanced&amp;rdquo; and turn off the option &amp;ldquo;Allow pages to choose their own fonts, instead of your selection above&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Fixing Gnome Boot problem</title>
      <link>https://wittchen.io/posts/fixing-gnome-boot-problem/</link>
      <pubDate>Tue, 22 Oct 2019 22:42:21 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/fixing-gnome-boot-problem/</guid>
      <description>I recently had an issue with Gnome on Arch Linux during the system boot. After turning my computer on, I saw gray screen with message like:
Oh no! Something has gone wrong. A problem has occurred and the system can&#39;t recover... and I couldn&amp;rsquo;t log in or do anything and started searching solutions for this problem via my phone. First, I switched to terminal mode with Alt+F2(you can switch back to GUI with Alt+F1), logged in and updated system via pacman: sudo pacman -Syu.</description>
    </item>
    
    <item>
      <title>Cleaning root partition on Linux</title>
      <link>https://wittchen.io/posts/cleaning-root-partition-on-linux/</link>
      <pubDate>Thu, 17 Oct 2019 09:57:56 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/cleaning-root-partition-on-linux/</guid>
      <description>Size of the root partition / on my system is 25 GB. I recently had a situation where I received notification from the system that there&amp;rsquo;s too little free space on that partition, which was around 1 GB. My first attempt was to clean pacman cache with sudo pacman -Sc. It helped for a moment, but I kept receiving this notification. I searched for the solutions regarding extending the root partition and noticed that it wouldn&amp;rsquo;t be that easy and probably require making backup and reinstalling the system.</description>
    </item>
    
    <item>
      <title>Formatting USB disk on Linux</title>
      <link>https://wittchen.io/posts/formatting-usb-disk-on-linux/</link>
      <pubDate>Sun, 01 Sep 2019 09:16:07 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/formatting-usb-disk-on-linux/</guid>
      <description>Sometimes we may want to format external USB drive. I recently encountered a situation, where I had bootable USB drive with operating system ready to install, but I wanted to remove all this stuff and use disk for storing data. I couldn&amp;rsquo;t format this disk with GUI tools for some reason and I kept getting errors or information that it&amp;rsquo;s not possible. In case you don&amp;rsquo;t know, on Linux everything is always possible, so I quit that GUI tool, opened terminal and start playing with good old and simple programs.</description>
    </item>
    
    <item>
      <title>Modifying mehtod&#39;s input parameters</title>
      <link>https://wittchen.io/posts/modifying-methods-input-parameters/</link>
      <pubDate>Mon, 05 Aug 2019 18:27:30 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/modifying-methods-input-parameters/</guid>
      <description>During maintenance of the legacy projects, I sometimes see constructions like:
void appendFooter(Report report); or
void populate(Data data); I even saw something like this:
void populate(Source source, Target target); What is wrong with these statements?
They&amp;rsquo;re using so called output argument. In the examples above, we&amp;rsquo;re passing a report or data variable, which usually are going to be global variables available in the scope of the whole class. These methods takes them as an argument and modify them.</description>
    </item>
    
    <item>
      <title>Get rid of the list null-checks</title>
      <link>https://wittchen.io/posts/get-rid-of-the-list-null-checks/</link>
      <pubDate>Sun, 28 Jul 2019 23:18:43 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/get-rid-of-the-list-null-checks/</guid>
      <description>During development of the legacy Java applications, we still have to deal with null. It&amp;rsquo;s possible to avoid it completly when we&amp;rsquo;re designing application from the scratch, applying proper code constructions, static code analysis and we&amp;rsquo;re consistent during code reviews. Nevertheless in majority of the cases we will encounter null in daily projects. We may even expect them in the method inputs and we have to be prepared for it. With the functional programming in Java we can deal with them in quite elegant way, but I often see people are not using features available nowadays.</description>
    </item>
    
    <item>
      <title>Arch Linux - installation notes no. 2 (GUI and utils)</title>
      <link>https://wittchen.io/posts/arch-install-notes-gui-and-utils/</link>
      <pubDate>Sat, 27 Jul 2019 09:31:30 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/arch-install-notes-gui-and-utils/</guid>
      <description>Introduction #  In my previous article I roughly described Arch Linux installation process. After going through whole process, we will end up with clean terminal without any graphical environment etc. In most cases, we will need it on the desktop.
Desktop Environment (DE) / Windows Manager (WM) #  There are two main types of the Linux graphical environments for desktop:
 Window Managers Desktop Environments  Window Managers are much simpler, require a lot of configuration, learning how to use them and you see all windows at once.</description>
    </item>
    
    <item>
      <title>Arch Linux - installation notes</title>
      <link>https://wittchen.io/posts/arch-install-notes/</link>
      <pubDate>Wed, 24 Jul 2019 23:59:20 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/arch-install-notes/</guid>
      <description>Introduction #  For a long time, I was considering switching from Ubuntu do Arch Linux distribution, but I didn&amp;rsquo;t have enough knowledge, time and energy to do this. I definitely knew it requires some specific knowledge and manual steps to perform. I also didn&amp;rsquo;t wat to spend too much time on reading the documentation. Moreover, I know that sometimes I could have specific issues related to my hardware, which are not listed in documentation and I have to deal with them on my own.</description>
    </item>
    
    <item>
      <title>Zen of the Java library release process</title>
      <link>https://wittchen.io/posts/zen-of-java-library-release-process/</link>
      <pubDate>Sat, 08 Jun 2019 10:58:10 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/zen-of-java-library-release-process/</guid>
      <description>In my previous article I published information about publishing JAR/AAR library to the Maven Central Repository. A few steps of that process were automated, but a few of them were still manual. I mean closing and release process which had to be done by manual clicking on the Sonatype website. Fortunately, it&amp;rsquo;s possible to automate it. In order to do that, I used gradle-nexus-staging-plugin developed by Codearte. Thanks to this plugin I could get rid of the remaining manual steps left in the release process.</description>
    </item>
    
    <item>
      <title>Publishing a JAR/AAR to the Maven Central</title>
      <link>https://wittchen.io/posts/publishing-jar-aar-to-maven-central/</link>
      <pubDate>Fri, 24 May 2019 19:18:27 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/publishing-jar-aar-to-maven-central/</guid>
      <description>Introduction #  As a Java/JVM/Android developers we rely on the work of other people through frameworks and libraries. Many of them are open-source. Most of the developers are consumers of such projects. What if we would like to create our own library and distribute it to other developers? We can always create it and share a *.jar or *.aar file with others. Drawback of such solution is the fact that source of distribution may not be trusted.</description>
    </item>
    
    <item>
      <title>Kyma meets CCV2 hackathon summary</title>
      <link>https://wittchen.io/posts/kyma-meets-ccv2-hackathon-summary/</link>
      <pubDate>Fri, 14 Dec 2018 14:34:01 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/kyma-meets-ccv2-hackathon-summary/</guid>
      <description>Introduction #  I recently I had an opportunity to join &amp;ldquo;Kyma meets CCV2 Hackathon&amp;rdquo; in the SAP Labs Poland office in Gliwice. The goal of the hackathon was to create a simple project, which will use Kyma to integrate external services with the SAP Hybris Commerce Platform. CCV2 stands for &amp;ldquo;Commerce Cloud Version 2&amp;rdquo;, which are basically SAP Hybris Commerce solutions deployed on the MS Azure Cloud (that&amp;rsquo;s a long story described in a short way).</description>
    </item>
    
    <item>
      <title>Brain-Computer Interfaces - Science Fiction or Reality?</title>
      <link>https://wittchen.io/posts/bci-sci-fi-or-reality-oredev-2018/</link>
      <pubDate>Wed, 21 Nov 2018 21:59:06 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/bci-sci-fi-or-reality-oredev-2018/</guid>
      <description>Recently, I had an opportunity to speak at the software development conference abroad for the first time. I visited Malmö in Sweden and gave a talk during the Øredev 2018 conference. The main theme of the conference was Deus Ex Machina, so I decided to adapt to this topic and prepared presentation about Brain-Computer Interfaces, which is my interest since the end of my studies at the Silesian University of Technology where I wrote a Master Thesis about similar topic.</description>
    </item>
    
    <item>
      <title>Creating a fat AAR</title>
      <link>https://wittchen.io/posts/creating-fat-aar/</link>
      <pubDate>Tue, 02 Oct 2018 00:01:31 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/creating-fat-aar/</guid>
      <description>I recently wrote a new library called NeuroSky Android SDK. It&amp;rsquo;s used for writing Android apps using signals of the brain waves received from the NeuroSky MindWave Mobile headsets. Probably I&amp;rsquo;ll write a separate article about it because it&amp;rsquo;s quite interesting topic. This library uses ThinkGear library, which is distributed by the NeuroSky as a *.jar file, so I couldn&amp;rsquo;t use it as a Gradle or Maven dependency in my project and I had to put this *.</description>
    </item>
    
    <item>
      <title>Separate execution of unit and integration tests in Gradle</title>
      <link>https://wittchen.io/posts/separate-execution-of-unit-and-integration-tests-in-gradle/</link>
      <pubDate>Sat, 22 Sep 2018 16:51:47 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/separate-execution-of-unit-and-integration-tests-in-gradle/</guid>
      <description>During development process, we often write unit and integration tests. While unit tests verify corectness of the small pieces of code, integration tests verify software as a whole project and sometimes can treat it as a black box where concrete results are expected. During development of the REST API, we can write integration tests for such API with REST Assured. Integration tests are usually slower, because they need to start the server and sometimes do other stuff.</description>
    </item>
    
    <item>
      <title>Excluding generated code from JaCoCo report</title>
      <link>https://wittchen.io/posts/excluding-generated-code-from-jacoco-report/</link>
      <pubDate>Tue, 18 Sep 2018 20:07:30 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/excluding-generated-code-from-jacoco-report/</guid>
      <description>I recently wrote a simple java app with Dagger 2 as a DI container and Gradle as a build system. I wanted to generate unit test coverage report for this app, so I used Jacoco.
In my build.gradle file I configured JaCoCo as follows:
plugins { id &amp;#39;jacoco&amp;#39; } jacocoTestReport { reports { xml.enabled = true html.enabled = true } } Now, I could type:
./gradlew test jacocoTestReport Report was generated in build/reports/jacoco/ directory.</description>
    </item>
    
    <item>
      <title>Testing exceptions</title>
      <link>https://wittchen.io/posts/testing-exceptions/</link>
      <pubDate>Tue, 04 Sep 2018 19:49:26 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/testing-exceptions/</guid>
      <description>In Java, we can test exceptions via unit tests in a few different ways. In this article, I&amp;rsquo;ll present common methods of doing that. Nevertheless, I suppose we there are different methods as well.
First method is basically wrapping a method call with try-catch block, assigning an exception to a variable and performing appropriate assertion. In these examples, I&amp;rsquo;m using JUnit for unit tests and Truth for assertions.
@Test public void shouldTestExceptionWithTryCatch() { Exception caughtException = null; try { throw new RuntimeExcetpion(&amp;#34;message&amp;#34;); } catch (final Exception e) { caughtException = e; } assertThat(caughtException).</description>
    </item>
    
    <item>
      <title>Writing my first library in Kotlin</title>
      <link>https://wittchen.io/posts/writing-my-first-library-in-kotlin/</link>
      <pubDate>Sun, 19 Aug 2018 10:24:19 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/writing-my-first-library-in-kotlin/</guid>
      <description>Introduction #  Recently, I decided to create a tiny Android library called RxBattery, which is monitoring battery state of the device with RxJava and RxKotlin. I created a few Java and Android libraries already and this time I decided to use Kotlin programming language instead of Java to learn something new and write something more complicated than &amp;ldquo;Hello World&amp;rdquo; app. Here are my observations.
Build System #  I used Gradle to build the project.</description>
    </item>
    
    <item>
      <title>Solving problems with AVD and KVM on Linux</title>
      <link>https://wittchen.io/posts/solving-problems-with-avd-and-kvm-on-linux/</link>
      <pubDate>Thu, 16 Aug 2018 22:01:06 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/solving-problems-with-avd-and-kvm-on-linux/</guid>
      <description>I installed Android SDK and Android Studio on my new ThinkPad T470s with Ubuntu Linux 18.04.1 LTS. As usual, I wanted to create a new Android phone emulator called AVD (Android Virtual Device). I was able to create a new device, but unfortunately I encoutered problems. After opening AVD window, I saw the error message&amp;hellip;
/dev/kvm is not found #  KVM (Kernel-based Virtual Machine) is a full virtualization solution for Linux on x86 hardware containing virtualization extensions (Intel VT or AMD-V).</description>
    </item>
    
    <item>
      <title>Poor Man&#39;s Dropbox</title>
      <link>https://wittchen.io/posts/poor-mans-dropbox/</link>
      <pubDate>Sun, 12 Aug 2018 23:10:42 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/poor-mans-dropbox/</guid>
      <description>Dropbox abandons Linux users #  Recently, I&amp;rsquo;ve started receiving a notification from Dropbox desktop app on Linux that they&amp;rsquo;ll stop syncing my files in November. I couldn&amp;rsquo;t understand why. I&amp;rsquo;m using this service for some time and I find it really useful. Moreover, I want to backup several important files on the web server in case of my disk crashes or I&amp;rsquo;ll need to access them from another computer or mobile device.</description>
    </item>
    
    <item>
      <title>Different ways of squashing commits</title>
      <link>https://wittchen.io/posts/squashing-commits/</link>
      <pubDate>Sat, 21 Jul 2018 11:21:54 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/squashing-commits/</guid>
      <description>While creating a Pull Requests it&amp;rsquo;s good to squash all of our intermediate commits into one to avoid clutter in the git log, simplify analysis and allow for simple code revert when necessary.
Solution #1 #  Some time ago I&amp;rsquo;ve found project http://rebaseandsqua.sh/ made by Jake Wharton. It&amp;rsquo;s really useful, handy and allows us to rebase and squash commits quite easily.
We can just call:
curl rebaseandsqua.sh | sh then edit our commit messages and push the changes.</description>
    </item>
    
    <item>
      <title>Releasing ReactiveNetwork v. 1.0.0 (paying the technical debt)</title>
      <link>https://wittchen.io/posts/releasing-reactive-network-1/</link>
      <pubDate>Sun, 24 Jun 2018 23:39:18 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-reactive-network-1/</guid>
      <description>Today, I&amp;rsquo;ve released next version of my most popular open-source project - ReactiveNetwork. I&amp;rsquo;ve released version 0.12.4 for RxJava1.x and version 1.0.0 for RxJava2.x. Please note, RxJava1.x is no longer officially supported and I&amp;rsquo;m going to follow the same approach in my RxJava-based projects. It&amp;rsquo;s not the first release of this project, but I&amp;rsquo;m breaking the API and removing existing methods, so I decided to stick to proper versioning standard. I didn&amp;rsquo;t always do it properly in the past, but it&amp;rsquo;s never too late.</description>
    </item>
    
    <item>
      <title>Debugging Google Pixel 2</title>
      <link>https://wittchen.io/posts/debugging-pixel2/</link>
      <pubDate>Wed, 20 Jun 2018 23:05:56 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/debugging-pixel2/</guid>
      <description>I recently destroyed my good old Nexus 6 phone. It&amp;rsquo;s still working, but display screen is broken. Due to this fact, I&amp;rsquo;ve had an excuse to buy new Pixel 2 phone. It&amp;rsquo;s pretty expansive, but its quality is really good. As usual, I wanted to debug an app on this device and encountered problem related to device permissions.
Once I connected the phone, to my laptop and typed adb devices, I&amp;rsquo;ve seen the following message:</description>
    </item>
    
    <item>
      <title>Publishing Python package to PyPi</title>
      <link>https://wittchen.io/posts/publishing-python-package-to-pypi/</link>
      <pubDate>Sun, 08 Apr 2018 11:47:49 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/publishing-python-package-to-pypi/</guid>
      <description>Introduction #  I have my own tiny Python project called spotify-cli-linux, which is (surprise!) command line interface for Spotify desktop app on Linux. Python is not my primary programming language and I work more with Java. Nevertheless, I find this language enjoyable and useful in many cases, so I try to learn something new about it from time to time. In the beginning, I&amp;rsquo;ve provided instructions how to install my Python script in the system via curl and wget, which is fine, but it&amp;rsquo;s not recommended and official way to do it.</description>
    </item>
    
    <item>
      <title>Avoiding merging master to master branch in Git</title>
      <link>https://wittchen.io/posts/avoiding-merging-master-to-master/</link>
      <pubDate>Sun, 25 Mar 2018 13:35:06 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/avoiding-merging-master-to-master/</guid>
      <description>Problem #  If you are working with Git Version Control System, probably you have seen a commit messages in your git log like:
Merge branch &#39;master&#39; to &#39;master&#39; or something similar. You might have even pushed such commits! Don&amp;rsquo;t worry, so did I ;-). In this article I&amp;rsquo;m going to explain why is it happenning and how to avoid it.
Such situation happens when you performed changes locally and at the same time someone else performed changes on the same branch as well, commited and pushed them to the remote repository.</description>
    </item>
    
    <item>
      <title>Deployment of the Java code to AWS Lambda</title>
      <link>https://wittchen.io/posts/deployment-of-the-java-code-to-aws-lambda/</link>
      <pubDate>Sun, 18 Mar 2018 16:50:02 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/deployment-of-the-java-code-to-aws-lambda/</guid>
      <description>Introduction #  In the cloud computing era, companies start using services like Google Cloud Platform, Amazon Web Services or Microsoft Azure. We can hear about the term &amp;ldquo;Serverless&amp;rdquo;. It doesn&amp;rsquo;t mean that we don&amp;rsquo;t have any servers. It means that third-party services provide us server infsrastrucutre, monitoring and scaling capabilities, so we don&amp;rsquo;t have to care about that stuff by ourselves and we can focus on writing code. We have concepts like Backend as a Service (BaaS) and Funtion as a Service (FaaS).</description>
    </item>
    
    <item>
      <title>Introducing ReactiveBus</title>
      <link>https://wittchen.io/posts/introducing-reactive-bus/</link>
      <pubDate>Sun, 11 Mar 2018 20:02:45 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-reactive-bus/</guid>
      <description>Today, I&amp;rsquo;ve released my another tiny project. It&amp;rsquo;s a very simple implementation of Event Bus with RxJava 2 under the hood. This library is compatible with Java 1.7 or higher. I didn&amp;rsquo;t use Java 1.8 or 1.9 because I wanted to make it compatible with Android apps.
You can use it as follows:
Bus bus = ReactiveBus.create(); Disposable observer = bus.receive().subscribe(new Consumer&amp;lt;Event&amp;gt;() { @Override public void accept(Event event) { // handle event here  } }); Once, we created Event Bus object and our observer (or more precisely: disposable subscriber), we can start sending events:</description>
    </item>
    
    <item>
      <title>New blog, new system, new domain</title>
      <link>https://wittchen.io/posts/new-blog/</link>
      <pubDate>Sun, 04 Mar 2018 12:26:59 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/new-blog/</guid>
      <description>I&amp;rsquo;ve just finished migrating my personal website and blog from Wordpress to Hexo. I&amp;rsquo;ve been using Wordpress for more than 5 years and decided to check out something new. Hexo amazed me with its simplicity and ease of use. Probably this tool is more recognized around JavaScript developers, because it&amp;rsquo;s written in that language. I discovered it in the last month.
Features of Hexo #  Static website generator #  For a simple blog with static content I don&amp;rsquo;t really need dynamic website like Wordpress.</description>
    </item>
    
    <item>
      <title>Automating generation of the on-line documentation for Java library</title>
      <link>https://wittchen.io/posts/automating-generation-of-the-on-line-documentation-for-java-library/</link>
      <pubDate>Sun, 11 Feb 2018 10:22:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/automating-generation-of-the-on-line-documentation-for-java-library/</guid>
      <description>Introduction #  In one of my open-source projects - ReactiveNetwork I have a documentation in README.md file and I have JavaDocs as well. This project is an Android library written in Java and built with Gradle. Moreover, I develop this project on two separate Git branches - one for RxJava1.x and another one for RxJava2.x. Similar convention is in the RxJava repository, so I followed it. After each release I publish documentation and JavaDocs on GitHub pages for both versions.</description>
    </item>
    
    <item>
      <title>Quality Meetup no. 15 - Fixing a billion dollar mistake</title>
      <link>https://wittchen.io/posts/quality-meetup-15-fixing-a-billion-dollar-mistake/</link>
      <pubDate>Fri, 09 Feb 2018 00:46:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/quality-meetup-15-fixing-a-billion-dollar-mistake/</guid>
      <description>On the 8th of February 2018, during Quality Meetup #15, I gave a presentation titled &amp;ldquo;Fixing a billion dollar mistake&amp;rdquo;. Tony Hoare introduced Null Reference w in ALGOL language in 1965. He calls this decision a &amp;ldquo;billion dollar mistake&amp;rdquo;. It was so easy to implement and probably it caused a loss of millions of dollars due to the mistakes done in the software over the 40 years. During the time, people came up with different ideas of solving that problem with software libraries, good programming practices, static code analysis and compile time code analysis.</description>
    </item>
    
    <item>
      <title>Air quality monitoring script for Argos (Linux) and BitBar (macOS)</title>
      <link>https://wittchen.io/posts/air-quality-monitoring-script-for-argos-linux-and-bitbar-macos/</link>
      <pubDate>Fri, 29 Dec 2017 10:02:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/air-quality-monitoring-script-for-argos-linux-and-bitbar-macos/</guid>
      <description>From some time, I wanted to create my own app, which will display some data in top panel in macOS or Gnome environment on Linux. I collected some resources about that and I knew that for macOS I need to write an app in Obj-C and for Gnome I need to write a plugin in JavaScript. In both cases it requires some ceremony and preparation. Recently I&amp;rsquo;ve found a great app for macOS called BitBar (by the way it&amp;rsquo;s open-source).</description>
    </item>
    
    <item>
      <title>Creating a Docker container with Alpine Linux including Java 8 and 9</title>
      <link>https://wittchen.io/posts/creating-a-docker-container-with-alpine-linux-including-java-8-and-9/</link>
      <pubDate>Wed, 27 Dec 2017 14:43:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/creating-a-docker-container-with-alpine-linux-including-java-8-and-9/</guid>
      <description>Recently, I&amp;rsquo;ve decided to refresh my knowledge regarding Docker and created an image with Alpine Linux and Java 9, which can be a useful base for the future projects. I used Alpine as a base image because it became quite popular in the Docker world due to its simplicity and the fact that it&amp;rsquo;s pretty lightweight when we compare it to containers based on other Linux distributions. Pure Alpine Docker container has about 4.</description>
    </item>
    
    <item>
      <title>DroidCon Poland 2017 - Is your app really connected?</title>
      <link>https://wittchen.io/posts/droidcon-poland-2017-is-your-app-really-connected/</link>
      <pubDate>Sat, 02 Dec 2017 01:39:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/droidcon-poland-2017-is-your-app-really-connected/</guid>
      <description>Yesterday, I gave a presentation about connectivity in the Android apps during the DroidCon Poland 2017 Conference in Kraków.
Below, you can see slides from this presentation.
 View slides on SpeakerDeck
There&amp;rsquo;s also tweet related to this presentation from DroidCon Kraków:
Piotr Wittchen tells us about how we can we keep the track of network &amp;#x1f30e; or Internet connectivity changes in our app &amp;#x1f4f1;&amp;#x1f198;&amp;#x1f642; pic.twitter.com/7YGGzNJeb2
&amp;mdash; droidcon Kraków (@droidconkr) December 2, 2017  I hope, you enjoyed it.</description>
    </item>
    
    <item>
      <title>Simple reactive HTTP client and server with RxJava, Vert.x and Android</title>
      <link>https://wittchen.io/posts/simple-reactive-http-client-and-server-with-rxjava-vertx-and-android/</link>
      <pubDate>Thu, 09 Nov 2017 22:30:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/simple-reactive-http-client-and-server-with-rxjava-vertx-and-android/</guid>
      <description>During Hack Your Career event at the Silesian University of Technology, I&amp;rsquo;ve prepared a presentation titled Reactive Programming - Efficient Server Applications with a colleague from work. Arek told about theory of Reactive Programming, shown basic concepts, data types and a few examples in the code. During my part of the presentation, I&amp;rsquo;ve wrote a very simple server and client in Java (9 on the server, 7 on the client) with Vert.</description>
    </item>
    
    <item>
      <title>5 ways to attend expensive IT conferences for (almost) free</title>
      <link>https://wittchen.io/posts/5-ways-to-attend-expansive-it-conferences-for-almost-free/</link>
      <pubDate>Thu, 02 Nov 2017 20:02:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/5-ways-to-attend-expansive-it-conferences-for-almost-free/</guid>
      <description>Introduction #  In the past months, I&amp;rsquo;ve attended a few conferences and meetups related to IT. I also plan to attend a few more in the last quarter of the year as a speaker. I&amp;rsquo;d like to show you a few tips, which can encourage you to attend such events, be more involved in them and spend some time away from your desk ;-). If you are working in a software company, in the most cases you could treat going for a conference as a non-customer facing business trip, so your regular days off will be safe and can be used for your personal plans and holidays :-).</description>
    </item>
    
    <item>
      <title>Meet and Code 2017 - &#34;Git – tips &amp; tricks&#34; presentation</title>
      <link>https://wittchen.io/posts/git-tips-and-tricks-meet-and-code-gliwice/</link>
      <pubDate>Sat, 21 Oct 2017 10:36:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/git-tips-and-tricks-meet-and-code-gliwice/</guid>
      <description>Recently, during Meet &amp;amp; Code event organized by Media 3.0 and SAP Hybris, I&amp;rsquo;ve gave a talk for university and high-school students about basics of Git. Presentation was titled Git - tips &amp;amp; tricks and was organized at the Silesian Univeristy of Technology in the AEI Department where I was studying a few years ago. Presentation covered quite essential usage of Git, which could be helpful for people who are planning to learn it from the scratch.</description>
    </item>
    
    <item>
      <title>JDD 2017 - Get ready for java.util.concurrent.Flow! - summary</title>
      <link>https://wittchen.io/posts/jdd-2017-juc-flow-presentation-summary/</link>
      <pubDate>Thu, 05 Oct 2017 16:19:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/jdd-2017-juc-flow-presentation-summary/</guid>
      <description>Recently on the JDD 2017 conference, I gave a presentation regarding introduction to Reactive Streams standard in Java 9. I also talked about existing implementations of this standard with the strongest focus on RxJava2 and created simple Reactive Streams implementation in pure Java 9 during the presentation. Below, you can find slides from this talk.
 View presentation on SpeakerDeck
Code snippets shown during this presentation are available at https://github.com/pwittchen/java-flow-experiments. I have done a tiny live coding session during this talk.</description>
    </item>
    
    <item>
      <title>Integrating ErrorProne and NullAway with an Android project</title>
      <link>https://wittchen.io/posts/integrating-nullaway-with-an-android-project/</link>
      <pubDate>Fri, 15 Sep 2017 18:39:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/integrating-nullaway-with-an-android-project/</guid>
      <description>Recently, with the remote help of guys from Uber in California, I integrated NullAway and ErrorProne with the one of my open-source Android projects.
What is NullAway? #  Basically, it&amp;rsquo;s a tool to help eliminate NullPointerExceptions (NPEs) in your Java code. It detects situations where NPE could occur at the compile time. Let&amp;rsquo;s have a look at the following code:
static void log(Object x) { System.out.println(x.toString()); } static void foo() { log(null); } NullAway will find out that we&amp;rsquo;re passing null and we&amp;rsquo;ll get appropriate error message:</description>
    </item>
    
    <item>
      <title>Building and running SAP Hybris Commerce Platform via Gradle</title>
      <link>https://wittchen.io/posts/building-sap-hybris-commerce-suite-via-gradle/</link>
      <pubDate>Fri, 01 Sep 2017 18:25:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/building-sap-hybris-commerce-suite-via-gradle/</guid>
      <description>Introduction #  I really like Gradle build system for JVM apps. It has flexibility like Ant and great dependency management capabilities like Maven. It addition, it doesn&amp;rsquo;t use XML notation, but Groovy programming language, so builds configurations are simple, concise, easier to read and easier to create. In my opinion, Gradle is truly modern build system for JVM apps. Nevertheless, there are projects, which are pretty old and use older systems like Ant.</description>
    </item>
    
    <item>
      <title>Introducing ReactiveAirplaneMode</title>
      <link>https://wittchen.io/posts/introducing-reactive-airplane-mode/</link>
      <pubDate>Tue, 15 Aug 2017 19:28:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-reactive-airplane-mode/</guid>
      <description>I&amp;rsquo;m continuing Rxfication of the Android. Recently I released brand new library called ReactiveAirplaneMode. As you may guess, it allows listening Airplane mode on Android device with RxJava observables. A usual I&amp;rsquo;ve hidden all implementation details, BroadcastReceivers and rest of the Android related stuff behind RxJava abstraction layer, so API is really simple. Just take a look on that:
ReactiveAirplaneMode.create() .observe(context) .subscribeOn(Schedulers.io()) .observeOn(AndroidSchedulers.mainThread()) .subscribe(isOn -&amp;gt; textView.setText(String.format(&amp;#34;Airplane mode on: %s&amp;#34;, isOn.toString()))); In the code above subscriber will be notified only when airplane mode changes.</description>
    </item>
    
    <item>
      <title>Using Tmux plugins with Tpm</title>
      <link>https://wittchen.io/posts/using-tmux-with-tpm/</link>
      <pubDate>Mon, 07 Aug 2017 19:31:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/using-tmux-with-tpm/</guid>
      <description>Recently, I decided to organize my Unix dotfiles in a better way. I had a few custom scripts I used in my Tmux bottom bar. I kept these scripts in .scripts directory and during installation or upgrade of my personal configuration, install.sh script was copying them from .scripts directory to /usr/local/bin/ directory. I wanted to make this configuration more solid and consistent, so I decided to transform these scripts into tmux plugins managed by tpm.</description>
    </item>
    
    <item>
      <title>Releasing ReactiveNetwork v. 0.11.0</title>
      <link>https://wittchen.io/posts/reactivenetwork-v-0110-walled-garden/</link>
      <pubDate>Sun, 06 Aug 2017 06:38:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reactivenetwork-v-0110-walled-garden/</guid>
      <description>In the latest release of ReactiveNetwork library, I focused on Walled Garden AKA Great Firewall support during checking Internet connectivity. There are countries with limited Internet access like China and in such cases, pinging commonly known host like www.google.com may have different results than in other countries because it may be blocked. We may get false positive results because users will generally have an access to the Internet, but they don&amp;rsquo;t have access only to several websites.</description>
    </item>
    
    <item>
      <title>Releasing ReactiveNetwork v. 0.10.0</title>
      <link>https://wittchen.io/posts/releasing-reactivenetwork-v-0100/</link>
      <pubDate>Thu, 20 Jul 2017 20:02:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-reactivenetwork-v-0100/</guid>
      <description>I&amp;rsquo;ve recently released ReactiveNetwork library v. 0.10.0 for RxJava1.x and RxJava2.x. ReactiveNetwork is an Android library listening network connection state and Internet connectivity with RxJava Observables, which I&amp;rsquo;m developing for approximately 2 years now. In this version, I&amp;rsquo;ve done a few bug fixes and added new features for RxJava2.x version. Below, you can find the release notes: Release for RxJava1.x
 bumped RxJava1 version to 1.3.0 bumped test dependencies created Code of Conduct updated Kotlin version in sample apps added retrolambda to the sample Java app - issue #163 fixed behavior of network observing in disconnected state - issue #159  Release for RxJava2.</description>
    </item>
    
    <item>
      <title>Release of prefser v. 2.1.0 with RxJava2 support</title>
      <link>https://wittchen.io/posts/release-of-prefser-210-with-rxjava2/</link>
      <pubDate>Mon, 19 Jun 2017 16:56:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/release-of-prefser-210-with-rxjava2/</guid>
      <description>I&amp;rsquo;ve recently released new version of prefser library for Android. In case you don&amp;rsquo;t know, it&amp;rsquo;s a wrapper for Android SharedPreferences with object serialization and RxJava Observables. This version has the new artifact, which has codebase migrated to RxJava2.x. As usual, I kept backward compatibility with RxJava1.x. You can find more details about the project at https://github.com/pwittchen/prefser. If you want to use it in your mobile project, you need the following dependencies in the build.</description>
    </item>
    
    <item>
      <title>New reactive data types in RxJava2</title>
      <link>https://wittchen.io/posts/new-reactive-data-types-in-rxjava2/</link>
      <pubDate>Wed, 31 May 2017 17:49:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/new-reactive-data-types-in-rxjava2/</guid>
      <description>Introduction #  I&amp;rsquo;m still exploring reactive programming world and RxJava library. Recently, I&amp;rsquo;ve migrated a few of my open-source libraries from RxJava1 to RxJava2 and written yet another project in RxJava2 from the beginning. Nevertheless, I&amp;rsquo;m still learning this library and its concept. It&amp;rsquo;s very wide topic. In RxJava1 we simply had one reactive data type called Observable. In RxJava2, we have more data types like Observable, Flowable, Single, Maybe &amp;amp; Completable.</description>
    </item>
    
    <item>
      <title>Introducing YaaS Java SDK</title>
      <link>https://wittchen.io/posts/introducing-yaas-java-sdk/</link>
      <pubDate>Sun, 28 May 2017 21:24:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-yaas-java-sdk/</guid>
      <description>Introduction #  In my company, there&amp;rsquo;s a concept of so-called &amp;ldquo;innovation day&amp;rdquo;. I have the possibility to &amp;ldquo;use&amp;rdquo; 1 innovation day per 2 development sprints. Last year, I used only 1 day due to the tight release schedule and a lot of work. Now, we are right after release, so I had time to take innovation day once again. I&amp;rsquo;ve decided to create YaaS Java SDK. If you don&amp;rsquo;t know what the YaaS is, check out my previous article about basic usage of YaaS proxy for the microservice.</description>
    </item>
    
    <item>
      <title>Releasing Prefser v. 2.0.7</title>
      <link>https://wittchen.io/posts/prefser-207/</link>
      <pubDate>Sun, 28 May 2017 20:48:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/prefser-207/</guid>
      <description>I&amp;rsquo;ve recently released new version of Prefser. It&amp;rsquo;s a wrapper for Android SharedPreferences with object serialization and RxJava Observables. The new version number is 2.0.7. In this release, I performed mostly internal work not related to the external library API. Nevertheless, it&amp;rsquo;s important for the library development in the future. The following things were done:
 updated dependencies updated Gradle configuration migrated unit tests to Robolectric started executing unit tests on Travis CI added integration with codecov.</description>
    </item>
    
    <item>
      <title>Joining lists of RxJava Observables</title>
      <link>https://wittchen.io/posts/joining-lists-of-rxjava-observables/</link>
      <pubDate>Mon, 15 May 2017 20:37:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/joining-lists-of-rxjava-observables/</guid>
      <description>In RxJava we have a few operators for joining Observables. The most common are:
 concat merge zip  Take a look at the documentation in these links. It has interactive marble diagrams showing how the operators work on the streams. You can move marbles along the lines and see how the output stream changes. It really helps to understand how it works. Code snippets in this article are based on RxJava 2.</description>
    </item>
    
    <item>
      <title>Emitting different observables conditionally</title>
      <link>https://wittchen.io/posts/emitting-different-rxjava-observables-depending-on-the-condition-with-flatmap/</link>
      <pubDate>Sun, 14 May 2017 21:44:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/emitting-different-rxjava-observables-depending-on-the-condition-with-flatmap/</guid>
      <description>Sometimes, we may need to emit different RxJava Observables depending on the specific condition dynamically. Moreover, it&amp;rsquo;s good to do it right without breaking a chain (stream of Observables). We want to combine different Observables together and do not want to nest one subscription inside another subscription because this will lead us to &amp;ldquo;subscription hell&amp;rdquo; similar to &amp;ldquo;callback hell&amp;rdquo;. Luckily RxJava has mechanisms to deal with such problems. In this article, I&amp;rsquo;m basing my examples on RxJava 2.</description>
    </item>
    
    <item>
      <title>Basic code refactoring principles</title>
      <link>https://wittchen.io/posts/basic-code-refactoring-principles/</link>
      <pubDate>Fri, 05 May 2017 23:29:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/basic-code-refactoring-principles/</guid>
      <description>Introduction #  I&amp;rsquo;ve recently read a book about Test Driven Development by Kent Beck. It&amp;rsquo;s really good, presents the importance of the TDD and shows how to make a life of the software developer easier. In the TDD we follow red-green-refactor process in which we create a failing unit test, then we fix it and refactor it to make code-base better. There&amp;rsquo;s no golden rule when to refactor or how to refactor code and each project is different, but there are a few principles we may follow when we want to improve our projects through refactoring.</description>
    </item>
    
    <item>
      <title>Monitoring usage of open-source projects</title>
      <link>https://wittchen.io/posts/monitoring-usage-of-oss/</link>
      <pubDate>Tue, 02 May 2017 19:51:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/monitoring-usage-of-oss/</guid>
      <description>While developing open-source projects it&amp;rsquo;s important to monitor usage of them. Having that information we know on which projects we should concentrate the most and which are becoming more popular. In this short article, I&amp;rsquo;ll present you two tools, which can help you with that.
GitHub #  On GitHub, each project has &amp;ldquo;Traffic&amp;rdquo; tab. After clicking on it, we can see how many visitors and unique visitors we have, we can also check how many project clones and unique clones were performed (including CI servers).</description>
    </item>
    
    <item>
      <title>Basic usage of YaaS as a proxy for the microservice</title>
      <link>https://wittchen.io/posts/yaas-as-a-proxy-for-microservice/</link>
      <pubDate>Sun, 30 Apr 2017 22:45:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/yaas-as-a-proxy-for-microservice/</guid>
      <description>Introduction #  The company, where I currently work - SAP Hybris is developing a project called YaaS, which is an abbreviation of Hybris as a Service. Unfortunately, this article is not sponsored yet :). What a pity :(. I just like to understand many things &amp;amp; how they work to see the bigger picture. Moreover, company strategy is to leverage YaaS and search for the new possibilities and use cases of this project.</description>
    </item>
    
    <item>
      <title>Facebook is making solutions to talk from the brain – so do I</title>
      <link>https://wittchen.io/posts/facebook-is-making-bci/</link>
      <pubDate>Sun, 23 Apr 2017 22:01:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/facebook-is-making-bci/</guid>
      <description>During F8 Facebook Developers Conference 2017, Facebook revealed its plans for the nearest years. Among different stuff, keynote from the day 2 was especially interesting for me. Speakers talked about connectivity projects increasing access to the Internet across the globe, different methods of human-computer interaction, virtual reality, and last, but not least Brain-Computer Interface.
It&amp;rsquo;s super-interesting for me, because 4 years ago I wrote Master Thesis about Brain-Computer Interface for Mobile Devices at my university &amp;amp; published a few short articles about Brain-Computer Interface on this blog.</description>
    </item>
    
    <item>
      <title>3 Alternatives to Evernote</title>
      <link>https://wittchen.io/posts/3-alternatives-to-evernote/</link>
      <pubDate>Sun, 23 Apr 2017 17:47:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/3-alternatives-to-evernote/</guid>
      <description>Introduction #  I&amp;rsquo;ve been using Evernote for some time for taking longer notes, but it started to annoy me a little bit. The main drawback is lack of the Linux desktop app. I&amp;rsquo;m using this app on Android phone, Macbook (at work) and on Linux (at home). There are community apps like NixNote2, which is nice, but in my opinion it&amp;rsquo;s not good enough. Moreover, Evernote seems to have too many features, which distract me and I don&amp;rsquo;t really use most of them.</description>
    </item>
    
    <item>
      <title>Transform Vim into efficient IDE</title>
      <link>https://wittchen.io/posts/transform-vim-into-efficient-ide/</link>
      <pubDate>Sun, 16 Apr 2017 19:32:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/transform-vim-into-efficient-ide/</guid>
      <description>Introduction #  Some time ago, I decided to learn Vim. A lot of people are afraid of this editor and they usually don&amp;rsquo;t want to know anything about it or just learn how to quit it. In my opinion, it&amp;rsquo;s good to learn it because after mastering the basics, we can work very efficiently. After some time of usage, we may even replace editors like Atom or Sublime Text with Vim.</description>
    </item>
    
    <item>
      <title>ReactiveNetwork - release v. 0.9.0 with RxJava2.x support</title>
      <link>https://wittchen.io/posts/reactivenetwork-090-rxjava2/</link>
      <pubDate>Tue, 11 Apr 2017 06:04:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reactivenetwork-090-rxjava2/</guid>
      <description>This time, I upgraded my another reactive Android open-source project called ReactiveNetwork to RxJava2.x. Many thanks goes to @tushar-acharya who performed initial migration to the newer version of RxJava. During migration, I&amp;rsquo;ve also created new package rx2 to avoid potential import conflicts during migration inside Android apps. Besides migration, I&amp;rsquo;ve updated sample apps, documentation &amp;amp; JavaDocs on Github pages. You can still use RxJava1.x version and it&amp;rsquo;s available on the branch with that name.</description>
    </item>
    
    <item>
      <title>Automate tile layouts creation in tmux with tmux-auto-pane</title>
      <link>https://wittchen.io/posts/tmux-auto-pane/</link>
      <pubDate>Sat, 08 Apr 2017 13:05:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/tmux-auto-pane/</guid>
      <description>I just released tmux-auto-pane. It&amp;rsquo;s a tiny shell script for creating pre-defined tile layouts in Tmux on Linux with xdotool. In our workflow, we often have some pre-defined pane configurations in a terminal. The project called tmux-auto-pane helps to automate that process. It can save us some time and make us a bit more productive. We can call tmux-auto-pane with one of the following parameters:
--help | -h showing help --1l1r one left, one right --1l2r one left, two right --2l1r two left, one right --1u1d one up, one down --1u2d on up, two down --2u1d two up, one down --4tiles 4 tiles, 1 in each corner for example tmux-auto-pane --4tiles will generate such layout:</description>
    </item>
    
    <item>
      <title>ReactiveBeacons - release of v. 0.6.0 with support for RxJava2</title>
      <link>https://wittchen.io/posts/reactivebeacons-060-rxjava2/</link>
      <pubDate>Mon, 03 Apr 2017 18:20:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reactivebeacons-060-rxjava2/</guid>
      <description>Thanks to @BugsBunnyBR I released new version of ReactiveBeacons library with the RxJava2.x support. It&amp;rsquo;s an Android library scanning BLE (Bluetooth Low Energy) beacons nearby with RxJava Observables. I also kept backward compatibility with RxJava1.x. Different versions of the libraries are located on the separate git branches. It&amp;rsquo;s a similar approach to original RxJava project. I have separate builds on Travis CI, separate artifacts and JavaDocs. Such approach generates more overhead, but in such case, RxJava1.</description>
    </item>
    
    <item>
      <title>Browsing directories with Vim</title>
      <link>https://wittchen.io/posts/browsing-dirs-with-vim/</link>
      <pubDate>Sun, 02 Apr 2017 19:04:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/browsing-dirs-with-vim/</guid>
      <description>I&amp;rsquo;m still learning Vim every day. At first, it looks quite hard and most of the people want to learn how to quit it and never use again. Nevertheless, when you learn some basics, you can be really productive. This editor has much more cool functionalities than just :q shortcut ;-). Recently I discovered, you can use Vim not only for editing files but you can use it for browsing directories as well!</description>
    </item>
    
    <item>
      <title>How to make open-source projects, which people want to use</title>
      <link>https://wittchen.io/posts/how-to-make-open-source-projects-which-people-want-to-use/</link>
      <pubDate>Sat, 01 Apr 2017 17:22:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-make-open-source-projects-which-people-want-to-use/</guid>
      <description>Today at Kariera IT conference in Katowice, Poland, I presented talk explaining how to make open-source projects, which people want to use from my perspective. Below, you can find slides from my presentation. Thank you all for the attendance, interesting questions and organizers for inviting me. I hope you learned something new. Of course, any constructive feedback for this talk will be appreciated :).
 Link: How to make open-source projects, which people want to use</description>
    </item>
    
    <item>
      <title>Handling different Android versions with strategy pattern</title>
      <link>https://wittchen.io/posts/handling-different-android-versions-with-strategy-pattern/</link>
      <pubDate>Sun, 26 Mar 2017 22:39:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/handling-different-android-versions-with-strategy-pattern/</guid>
      <description>When we&amp;rsquo;re developing Android apps, we have to remember that different users have different versions of the Android OS. Unfortunately, not all of them has the newest version of the system and some of them have older devices with older systems. Some of these devices may be even unsupported because e.g. Google supports their devices like Nexus and Pixel for only 2 years. When we want to reach as many users as possible and make the app available for almost everyone, we have to handle different Android versions.</description>
    </item>
    
    <item>
      <title>Review your changes in the code before the commit</title>
      <link>https://wittchen.io/posts/review-your-changes-before-the-commit/</link>
      <pubDate>Sun, 26 Mar 2017 22:18:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/review-your-changes-before-the-commit/</guid>
      <description>Most of the people use git as follows.
 they create a feature branch they make some changes they add all the changes: git add -A they commit changes: git commit -m &amp;quot;I&#39;ve done changes&amp;quot; they push it: git push  There&amp;rsquo;s a problem with such approach. When we created a lot of changes, it may happen that we forgot to delete something and we pushed some garbage to the remote repository.</description>
    </item>
    
    <item>
      <title>Android design inspirations</title>
      <link>https://wittchen.io/posts/android-design-inspirations/</link>
      <pubDate>Sun, 19 Mar 2017 19:51:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/android-design-inspirations/</guid>
      <description>When we are planning to create our next Android app, besides the codebase, it&amp;rsquo;s also good to plan its design, UI, and UX. Before doing that, we can take a look at some inspirations and work of other people to gather a few UI design patterns, inspirations, and ideas. Good resource of such inspirations is Android Niceties website. As the authors write, this website is a collection of screenshots encompassing some of the most beautiful looking Android apps.</description>
    </item>
    
    <item>
      <title>Unit test coverage report with Travis CI for Robolectric on Android</title>
      <link>https://wittchen.io/posts/unit-test-coverage-report-with-travis-ci-for-robolectric-on-android/</link>
      <pubDate>Sun, 19 Mar 2017 19:32:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/unit-test-coverage-report-with-travis-ci-for-robolectric-on-android/</guid>
      <description>Introduction #  Some time ago, I&amp;rsquo;ve written an article about Test coverage report for Android application. It got some interest (many comments below article and many visits according to Google Analytics), so I decided to refresh this topic. Previously, I&amp;rsquo;ve written instrumentation unit tests, which needed to be executed on a real device or an emulator. It&amp;rsquo;s a good approach when you want to test functionalities strongly connected with the device.</description>
    </item>
    
    <item>
      <title>My approach to Git aliases</title>
      <link>https://wittchen.io/posts/my-approach-to-git-aliases/</link>
      <pubDate>Sun, 12 Mar 2017 13:20:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/my-approach-to-git-aliases/</guid>
      <description>While we are working with Version Control Systems like Git, it&amp;rsquo;s good to adapt them to our needs to perform daily work in a more productive way. People often create so-called Git aliases, which are shortcuts for longer commands. E.g. you can edit your .gitconfig file, which is usually located in your home directory and place a few aliases in the [alias] section. For example:
[alias] ls = log --pretty=format:&amp;quot;%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]&amp;quot; --decorate Then you can type: git ls in your Git repository to see pretty Git log.</description>
    </item>
    
    <item>
      <title>Working with different Git configs</title>
      <link>https://wittchen.io/posts/working-with-different-git-configs/</link>
      <pubDate>Fri, 10 Mar 2017 19:30:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/working-with-different-git-configs/</guid>
      <description>Short introduction #  Sometimes people need to specify multiple values for single .gitconfig file or they want to share just part of the configuration between two machines. There are different approaches for that. I can show you mine.
Different configs for different Operating Systems #  On my private computer, I use Linux. I use Git for my private projects and I use my private e-mail address there. At the same time, I use Git at work on macOS with exactly the same Git configuration, but with a different e-mail address.</description>
    </item>
    
    <item>
      <title>Control Spotify on Linux like a hacker</title>
      <link>https://wittchen.io/posts/control-spotify-on-linux-like-a-hacker/</link>
      <pubDate>Sun, 05 Mar 2017 22:40:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/control-spotify-on-linux-like-a-hacker/</guid>
      <description>Recently, I created a tiny script called spotify-cli, which allows you to control Spotify on Linux from terminal. It&amp;rsquo;s inspired by shpotify, which is a shell script doing similar things, but on macOS. My script is written in Python and uses dbus under the hood, which allows to communicate with bus daemon to pass messages between applications. I used pactl for controlling the system sound.
You can install spotify-cli as follows via wget:</description>
    </item>
    
    <item>
      <title>Analyzing performance of the web application with Chrome Dev Tools</title>
      <link>https://wittchen.io/posts/analyzing-performance-of-web-app-with-chrome-dev-tools/</link>
      <pubDate>Thu, 02 Mar 2017 20:26:40 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/analyzing-performance-of-web-app-with-chrome-dev-tools/</guid>
      <description>Introduction #  Recently, I attended a training related to ZK framework. One part of that training was quite interesting for me and was related to measuring and monitoring the performance of the web applications. In Chrome Browser, we have Chrome Dev Tools, which can be opened with Ctrl+Shift+I shortcut or ⌘+Shift+I shortcut on Mac. Inside these tools, we have &amp;ldquo;Performance&amp;rdquo; tab. We can hit red &amp;ldquo;record&amp;rdquo; icon in the upper left corner of the Tools window and start recording performance of the website while loading it, clicking around or whatever situation we want to monitor.</description>
    </item>
    
    <item>
      <title>One year of using Macbook Pro at work as a software developer</title>
      <link>https://wittchen.io/posts/one-year-of-using-macbook-pro-as-a-software-developer/</link>
      <pubDate>Sun, 29 Jan 2017 13:48:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/one-year-of-using-macbook-pro-as-a-software-developer/</guid>
      <description>Introduction #  For most of the time, I was MS Windows user. I was using this OS since Windows 95 up to Windows 10 ( the last version really occasionally). About ~3 years ago, I switched to Linux (Ubuntu) on my private computer. I used it before on virtual machine or sometimes in dual boot with Windows. About one year ago, I changed my job and decided to switch to Macbook Pro at work.</description>
    </item>
    
    <item>
      <title>Automate boring stuff</title>
      <link>https://wittchen.io/posts/automate-boring-stuff/</link>
      <pubDate>Sun, 01 Jan 2017 11:10:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/automate-boring-stuff/</guid>
      <description>Introduction #  In my current company all the people who perform creative work (mostly programmers) need to prepare so-called PKUP report. PKUP stands for Podwyższone Koszty Uzyskania Przychodu in the Polish language. It&amp;rsquo;s legal regulation in Poland, which allows paying a lower income tax due to the particular type of work. For the regular employee, it means that he or she will simply get a bit higher salary per month.</description>
    </item>
    
    <item>
      <title>Lifting quality of a shell script</title>
      <link>https://wittchen.io/posts/lifting-quality-of-a-shell-script/</link>
      <pubDate>Wed, 30 Nov 2016 23:29:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/lifting-quality-of-a-shell-script/</guid>
      <description>Introduction #  In release cycle of our team at work, we need to perform so-called system tests. In order to do that, we need to log into Artifactory, search for the latest release package, check if it&amp;rsquo;s up to date, download it, unzip it, install internal configuration recipe, compile, initialize &amp;amp; run it. Not all of that can be easily automated, but I thought that at least searching &amp;amp; downloading phase can be done from the terminal in a semi-automated way.</description>
    </item>
    
    <item>
      <title>Dockerizing Hybris</title>
      <link>https://wittchen.io/posts/dockerizing-hybris/</link>
      <pubDate>Wed, 27 Jul 2016 21:52:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/dockerizing-hybris/</guid>
      <description>Introduction #  A few months ago, I started work at Hybris, which was acquired by SAP, so our &amp;ldquo;division&amp;rdquo; is officially called SAP Hybris. I work in a team developing an extension for Hybris platform with assisting extensions and internal framework. There are many teams around the world developing their own extensions, which are finally integrated and packed into Commerce Suite provided to the clients and partners. We have our own development environment, but sometimes there&amp;rsquo;s need to build and run whole Commerce Suite in the case of system tests, bug reproduction, verification, etc.</description>
    </item>
    
    <item>
      <title>ReactiveNetwork - release of v. 0.2.0</title>
      <link>https://wittchen.io/posts/reactive-network-2/</link>
      <pubDate>Thu, 11 Feb 2016 19:19:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reactive-network-2/</guid>
      <description>I&amp;rsquo;ve recently released new version of ReactiveNetwork library for Android. Here are the fresh release notes for version 0.2.0:
 added possibility to observe WiFi signal level with observeWifiSignalLevel(context, numLevels) and observeWifiSignalLevel(context) method created WifiSignalLevel enum added internet check to parameters of getConnectivityStatus(context, checkInternet) method made getConnectivityStatus(context, checkInternet) method public changed String variable status in ConnectivityStatus enum to description and made it public changed output of the toString() method in ConnectivityStatus to keep consistency with another enum made ReactiveNetwork class non-final bumped Kotlin version in sample app to 1.</description>
    </item>
    
    <item>
      <title>Converting audio CD to mp3 files on Linux</title>
      <link>https://wittchen.io/posts/converting-cd-to-mp3-on-linux/</link>
      <pubDate>Sun, 24 Jan 2016 17:24:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/converting-cd-to-mp3-on-linux/</guid>
      <description>Not all songs are available on Spotify and sometimes we need to rip music from audio CDs in order to listen it on our computer or mobile device. There are several approaches to do that. Here is mine: Get RipperX:
sudo apt-get install ripperx
Put audio CD into your computer. Open RipperX, select All Tracks and check Rip to WAV option. Set quality of output files via &amp;ldquo;Config&amp;rdquo; option and names of the tracks if your want.</description>
    </item>
    
    <item>
      <title>3 questions about your Git repository</title>
      <link>https://wittchen.io/posts/3-questions-about-your-git-repo/</link>
      <pubDate>Mon, 28 Dec 2015 21:37:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/3-questions-about-your-git-repo/</guid>
      <description>Introduction #  Can you answer the following questions about your Git repository?
 Does development branch has all changes from master branch? Is your gitlog a crap? How old are your branches?  If not, but you want to know answers, you&amp;rsquo;re lucky, because I prepared 3 simple scripts for you, which can help to find it out.
Does development branch has all changes from master branch? #  git-branch-comparator is a python script, which checks if development branch has all changes from master branch in Git repository.</description>
    </item>
    
    <item>
      <title>Reactive Live Coding during GDG DevFest 2015 in Poland</title>
      <link>https://wittchen.io/posts/reactive-live-coding-gdg-devfest-pl-2015/</link>
      <pubDate>Sun, 29 Nov 2015 20:16:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reactive-live-coding-gdg-devfest-pl-2015/</guid>
      <description>I was asked to be a speaker during GDG DevFest 2015 conference in Warsaw, Poland. Of course, I accepted this invitation and prepared presentation titled &amp;ldquo;Reactive Live Coding&amp;rdquo;. Presentation covered basics of Reactive Programming, RxJava and RxAndroid. Besides my talk I&amp;rsquo;ve done live coding to show how to use mentioned libraries and basics principles of Reactive Programming in real life. I had only 20 minutes for all of that, so my time-box was very limited.</description>
    </item>
    
    <item>
      <title>New release of Kirai - elegant string formatting library for Java</title>
      <link>https://wittchen.io/posts/new-release-of-kirai-140/</link>
      <pubDate>Sun, 22 Nov 2015 20:34:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/new-release-of-kirai-140/</guid>
      <description>I&amp;rsquo;ve recently released version 1.4.0 of Kirai library. Kirai means phrase in Swahili language. It&amp;rsquo;s string formatting library written in Java. It originally started as an Android library, but it evolved to pure Java library. It&amp;rsquo;s first possibilities were basic string formatting and text formatting for Android TextViews. Now, it allows to format strings for Java, Web, Android and even Unix Terminal! Have you ever wanted to have colorful and styled text in your mobile app, website or terminal app?</description>
    </item>
    
    <item>
      <title>Bunch of updates in my OSS for Android</title>
      <link>https://wittchen.io/posts/bunch-of-updates-in-my-android-oss/</link>
      <pubDate>Sun, 08 Nov 2015 16:53:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/bunch-of-updates-in-my-android-oss/</guid>
      <description>Introduction #  In the last days I prepared a bunch of updates in my open-source software for Android. Most of them are bug fixes and are related to increasing robustness of the projects as well as their overall quality. I also decided to play a little with Kotlin language from JetBrains, which seems to be reasonable choice for mobile applications running on Android. Nevertheless, writing an app in Kotlin requires some additional configuration and we should remember, it&amp;rsquo;s still in beta version.</description>
    </item>
    
    <item>
      <title>An Opinionated Guide to Modern Java by Parallel Universe</title>
      <link>https://wittchen.io/posts/an-opinionated-guide-to-modern-java-by-parallel-universe/</link>
      <pubDate>Thu, 05 Nov 2015 08:27:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/an-opinionated-guide-to-modern-java-by-parallel-universe/</guid>
      <description>Introduction #  I recently read series of three articles titled An Opinionated Guide to Modern Java by Parallel Universe. It presents really interesting point of view and can be read even by non-Java developers due to its form. Non-Java developers can learn that Java can be fast, elegant and lightweight as much as other hipster technologies like Ruby, Go or Node.js. The main difference is the fact that Java is quite old and widely used technology what means it&amp;rsquo;s well tested, stable, solid, has great development and monitoring tools.</description>
    </item>
    
    <item>
      <title>Introducing ReactiveBeacons</title>
      <link>https://wittchen.io/posts/introducing-reactive-beacons/</link>
      <pubDate>Wed, 30 Sep 2015 19:49:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-reactive-beacons/</guid>
      <description>Recently, I&amp;rsquo;ve created yet another reactive library for Android. It&amp;rsquo;s called ReactiveBeacons and it&amp;rsquo;s responsible for observing BLE (Bluetooth Low Energy) beacons. Beacons are small devices, which became quite popular in the last years. They can be utilized in creating Contextual Awareness, Contextual Computing and Internet of Things. Beacons have lithium battery, are constantly turned on and emit signals via Bluetooth all the time. ReactiveBeacons library allows to transform these signals into Observable stream compatible with RxJava.</description>
    </item>
    
    <item>
      <title>Using tmux</title>
      <link>https://wittchen.io/posts/using-tmux/</link>
      <pubDate>Sun, 20 Sep 2015 11:04:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/using-tmux/</guid>
      <description>What is a terminal multiplexer? It lets you switch easily between several programs in one terminal, detach them (they keep running in the background) and reattach them to a different terminal. And do a lot more.
 - tmux.github.io
Tmux feature, which I find very useful is tiling terminal window. We can have several tiles with different terminals within a single terminal window.
How to use tiling? #  First, we need to install tmux:</description>
    </item>
    
    <item>
      <title>Introducing ReactiveSensors</title>
      <link>https://wittchen.io/posts/introducing-reactive-sensors/</link>
      <pubDate>Sat, 05 Sep 2015 20:03:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-reactive-sensors/</guid>
      <description>Another month, another library. Recently, I&amp;rsquo;ve released yet another reactive library called ReactiveSensors. It&amp;rsquo;s an open-source Android library monitoring hardware sensors with RxJava Observables. Library is compatible with RxJava 1.0.+ and RxAndroid 1.0.+ and uses them under the hood.
Library is available at: https://github.com/pwittchen/ReactiveSensors.
In my opinion, hardware sensors are perfect case for applying RxJava, because in fact we&amp;rsquo;re constantly receiving a stream of events emitted by many sensors. With Reactive Programming approach we have plenty of possibilities and easy API for manipulating received sensor&amp;rsquo;s data.</description>
    </item>
    
    <item>
      <title>Learning python</title>
      <link>https://wittchen.io/posts/learning-python/</link>
      <pubDate>Tue, 01 Sep 2015 00:03:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/learning-python/</guid>
      <description>Some time ago, I&amp;rsquo;ve decided to learn Python programming language. I thought it may be useful during performing some basic tasks in the system and Linux or Windows scripting. Moreover, it&amp;rsquo;s good language for developing web applications with frameworks like Django, Flask or Bottle. I&amp;rsquo;ve decided to go through all of the tasks in the Learn Python - The Hard Way course. Basic tasks weren&amp;rsquo;t surprising. They were similar to other object oriented languages.</description>
    </item>
    
    <item>
      <title>Gnome Classic desktop environment on Ubuntu</title>
      <link>https://wittchen.io/posts/gnome-classic-ubuntu/</link>
      <pubDate>Sun, 23 Aug 2015 01:02:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/gnome-classic-ubuntu/</guid>
      <description>Introduction #  I was tired of non-minimal and quite slow Unity desktop environment. Of course, I performed a few tricks to make Unity faster, but still I wasn&amp;rsquo;t satisfied enough. I checked out different desktop environments. I wanted to have clean, minimal and productive environment. I like top panel from Unity as well as HUD and many workspaces. The last thing is quite common among different desktop environments.
New desktop environment #  I decided to choose Gnome classic.</description>
    </item>
    
    <item>
      <title>Learning Android and being up to date</title>
      <link>https://wittchen.io/posts/learning-android/</link>
      <pubDate>Sat, 22 Aug 2015 18:09:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/learning-android/</guid>
      <description>Recently a few people asked me, what are my methods for gathering knowledge and being up to date with all news connected with Android. I didn&amp;rsquo;t really think about that. I just grabbed all knowledge from a various places and then tried to use it in practice. I decided to sum everything up and create a collection of my knowledge resources. Of course, we are not able to use all of that every day, because it&amp;rsquo;s too much, but it&amp;rsquo;s good to know where we can find something interesting.</description>
    </item>
    
    <item>
      <title>Introducing ReactiveNetwork</title>
      <link>https://wittchen.io/posts/introducing-reactive-network/</link>
      <pubDate>Mon, 10 Aug 2015 21:52:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-reactive-network/</guid>
      <description>I&amp;rsquo;ve recently released ReactiveNetwork. It is an open-source Android library listening network connection state and change of the WiFi signal strength with RxJava Observables. It&amp;rsquo;s a successor of Network Events library rewritten with Reactive Programming approach.
Library is compatible with RxJava 1.0.+ and RxAndroid 1.0.+ and uses them under the hood. Min Android SDK version is 9. JavaDoc can be found at: http://pwittchen.github.io/ReactiveNetwork. Repository is available at: https://github.com/pwittchen/ReactiveNetwork.
This library is much simpler and easier to use than NetworkEvents.</description>
    </item>
    
    <item>
      <title>Releasing prefser 2.0.0</title>
      <link>https://wittchen.io/posts/releasing-prefser-2/</link>
      <pubDate>Thu, 06 Aug 2015 22:34:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-prefser-2/</guid>
      <description>I&amp;rsquo;ve recently released Prefser library v. 2.0.0. Prefser is a wrapper for Android SharedPreferences with object serialization and RxJava Observables. This update couldn&amp;rsquo;t be done without help of awesome open-source community and people who reported new issues and created pull requests. Thanks for that! A lot of issues related to RxJava was fixed. Moreover, now we can store and retrieve lists of objects of any type with Prefser. Examples of library usage can be found in README.</description>
    </item>
    
    <item>
      <title>Geary - neat e-mail client for Linux</title>
      <link>https://wittchen.io/posts/geary-email-client-for-linux/</link>
      <pubDate>Sat, 01 Aug 2015 13:41:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/geary-email-client-for-linux/</guid>
      <description>Overview #  I was using web interfaces for e-mail for a long time, but I wanted to give a try a desktop clients for Linux. I was searching for a quite simple solution with almost zero configuration, which I can use for my private and work e-mail accounts. Geary seems to be quite good choice. It is clean, easy to use and pretty neat e-mail client for Linux. It integrates with Unity on Ubuntu and display system notifications informing about new message.</description>
    </item>
    
    <item>
      <title>Releasing NetworkEvents 2.0.0</title>
      <link>https://wittchen.io/posts/releasing-network-events-2/</link>
      <pubDate>Fri, 31 Jul 2015 09:28:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-network-events-2/</guid>
      <description>I&amp;rsquo;ve recently released NetworkEvents library v. 2.0.0. It&amp;rsquo;s an Android library listening network connection state and change of the Wifi signal strength. It has a few significant changes in the API and new features, which people were requesting on GitHub. Moreover, codebase was slightly refactored and updated. I&amp;rsquo;m going to keep major.minor.patch convention AKA semantic versioning now:
 major - new feature or update - backward incompatible minor - new feature - backward compatible patch - bug-fix - backward compatible  A few changes are backward incompatible, so I&amp;rsquo;ve increased major number.</description>
    </item>
    
    <item>
      <title>Routing internet via SSH tunnel on Raspberry Pi</title>
      <link>https://wittchen.io/posts/routing-internet-via-ssh-tunnel-on-raspberry-pi/</link>
      <pubDate>Sat, 25 Jul 2015 01:38:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/routing-internet-via-ssh-tunnel-on-raspberry-pi/</guid>
      <description>Problem overview #  Recently I had the following problem. I wanted to connect to my Raspberry Pi from my laptop. For some reason WiFi dongle on the Raspberry Pi was not working properly. Moreover, I had only one slot available for the LAN connection via cable to the router, so I could connect only one device this way. I wanted to have reliable and fast internet connection on my laptop, but via WiFi it&amp;rsquo;s quite slow.</description>
    </item>
    
    <item>
      <title>Searching word in a string with KMP algorithm</title>
      <link>https://wittchen.io/posts/searching-word-in-a-string-with-kmp-algorithm/</link>
      <pubDate>Wed, 22 Jul 2015 13:03:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/searching-word-in-a-string-with-kmp-algorithm/</guid>
      <description>Sometimes it&amp;rsquo;s good to revise some algorithms and try to implement them in order to get to know, how the built-in functions of high level programming languages actually works. One of the popular problems is string searching. We have many approaches to solve this problem. For example:
 Naive string search algorithm Rabin-Karp string search algorithm Finite-state automaton based search Knuth-Morris-Pratt algorithm Boyer-Moore string search algorithm Bitap algorithm  This time, I&amp;rsquo;ve decided to focus on Knuth-Morris-Pratt (KMP) algorithm.</description>
    </item>
    
    <item>
      <title>Releasing Weather Icon View v. 1.0.0 for Android</title>
      <link>https://wittchen.io/posts/releasing-weather-icon-view-1-for-android/</link>
      <pubDate>Tue, 21 Jul 2015 17:34:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-weather-icon-view-1-for-android/</guid>
      <description>Today I released Weather Icon View library v. 1.0.0 It&amp;rsquo;s very simple and easy to use Android library, which allows you to use Weather Icons created by Erik Flowers in your mobile applications. This library was already available on GitHub as I wrote in one of my previous posts, but today it was released to Maven Central Repository and you can use it as Maven or Gradle dependency. I was encouraged to make this project more available by the open-source community and people who find it useful as I could read in the issue reported on the repository website.</description>
    </item>
    
    <item>
      <title>Get past the syntax - the real scare is in the semantics</title>
      <link>https://wittchen.io/posts/get-past-the-syntax/</link>
      <pubDate>Mon, 06 Jul 2015 15:37:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/get-past-the-syntax/</guid>
      <description>Dr. Venkat Subramaniam presented an interesting point of view during his talk at Devoxx conference. Programmers, who start learning a new language, often complain about syntax. They focus on using available keywords and constructions instead of trying to understand their meaning and purpose. Programmers also have their own habits. That’s why Java has similar syntax to C and C++. Creators of Java designed new language with syntax, which was familiar to them, with significant improvements.</description>
    </item>
    
    <item>
      <title>Releasing prefser v. 1.0.5</title>
      <link>https://wittchen.io/posts/releasing-prefser-v-105/</link>
      <pubDate>Thu, 18 Jun 2015 20:46:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/releasing-prefser-v-105/</guid>
      <description>I am happy to announce that I released version 1.0.5 of Prefser Android library. Prefser is a wrapper for Android SharedPreferences with object serialization and RxJava Observables. What has been done in this version:
 Removed final keyword from Prefser class in order to allow class mocking thanks to @plackemacher Removed unused imports from Prefser class Added test coverage report generation Increased test coverage to 100% Added abstraction for JsonConverter and default GsonConverter Added getAndObserve(.</description>
    </item>
    
    <item>
      <title>Test coverage report for Android application</title>
      <link>https://wittchen.io/posts/test-coverage-in-android-applications/</link>
      <pubDate>Wed, 03 Jun 2015 18:22:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/test-coverage-in-android-applications/</guid>
      <description>Update: see newer article about Unit test coverage report with Travis CI for Robolectric on Android. For a long time, I wasn&amp;rsquo;t able to find the right way to generate test coverage reports for Android instrumentation unit tests created with AndroidJUnit4 runner. In the past I&amp;rsquo;ve found many solutions, but none of them was working or they were compatible only with Robolectric, which I currently don&amp;rsquo;t use. Other developers also stopped using it for the new projects.</description>
    </item>
    
    <item>
      <title>Checking consistency of git branches</title>
      <link>https://wittchen.io/posts/checking-consistency-of-git-branches/</link>
      <pubDate>Thu, 14 May 2015 15:16:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/checking-consistency-of-git-branches/</guid>
      <description>Recently I&amp;rsquo;ve created a simple Python script, which checks whether &amp;lsquo;development&amp;rsquo; branch has all changes from &amp;lsquo;master&amp;rsquo; branch in a Git repository. It&amp;rsquo;s important when we work in a Git Flow. Branch inconsistency may occur when change with hot-fix will be committed to &amp;lsquo;master&amp;rsquo; branch and we forget to merge &amp;lsquo;master&amp;rsquo; branch back to &amp;lsquo;development&amp;rsquo; branch to have our hot-fix in a &amp;lsquo;development&amp;rsquo; version of the project as well. We should keep branch consistency to avoid merge conflicts and problems with release of the project in the future.</description>
    </item>
    
    <item>
      <title>Mutate - yet another Spotlight for Ubuntu</title>
      <link>https://wittchen.io/posts/mutate-yet-another-spotlight-for-ubuntu/</link>
      <pubDate>Mon, 06 Apr 2015 12:26:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/mutate-yet-another-spotlight-for-ubuntu/</guid>
      <description>Overview #  Some time ago, I published post about Synapse indicator, which is an alternative to MAC&amp;rsquo;s Spotlight for Ubuntu. Recently, I&amp;rsquo;ve found another software, which is in my opinion even better than Synapse. It&amp;rsquo;s called Mutate. I like it, because it works quite smooth, looks simple and clean. In addition, it&amp;rsquo;s open-source.
Installation #  We can install it with the following commands:
sudo add-apt-repository ppa:mutate/ppa sudo apt-get update sudo apt-get install mutate Configuration #  After installation, we can run Mutate from Ubuntu dashboard or via default hot-key CTRL+D and type preference.</description>
    </item>
    
    <item>
      <title>Making Ubuntu faster</title>
      <link>https://wittchen.io/posts/making-ubuntu-faster/</link>
      <pubDate>Sat, 28 Mar 2015 16:43:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/making-ubuntu-faster/</guid>
      <description>Unity desktop environment consumes lot of computer&amp;rsquo;s memory. I&amp;rsquo;ve recently found good article about 4 simple tweaks to improve Unity performance on Ubuntu. Here is the short summary of that tweaks:
Remove Unwanted Lenses #  It will speed up loading data under &amp;ldquo;Super&amp;rdquo; button.
sudo apt-get autoremove unity-lens-music unity-lens-photos unity-lens-gwibber unity-lens-shopping unity-lens-video Install Compiz Config Settings Manager #  sudo apt-get install compizconfig-settings-manager In Compiz Config Settings Manager perform the following operations:</description>
    </item>
    
    <item>
      <title>Static code analysis in Android project</title>
      <link>https://wittchen.io/posts/static-code-analysis-in-android-project/</link>
      <pubDate>Thu, 26 Mar 2015 00:23:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/static-code-analysis-in-android-project/</guid>
      <description>Overview #  I&amp;rsquo;ve recently read great article telling how to improve quality and syntax of your Android code by Vincent Brison. It presents how to use tools like Checkstyle, Findbugs, PMD, and Android Lint for Static Code Analysis in Android project. Static Code Analysis allows us to keep consistency of the source code style and helps us to find errors, warnings, possible bugs, bottlenecks and ways to improve the projects.</description>
    </item>
    
    <item>
      <title>The One Hacker Way</title>
      <link>https://wittchen.io/posts/the-one-hacker-way/</link>
      <pubDate>Sun, 22 Mar 2015 01:41:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/the-one-hacker-way/</guid>
      <description>Recently, I&amp;rsquo;ve seen an unusual talk about The One Hacker Way - a rational alternative to Agile by Erik Meijer. It&amp;rsquo;s really interesting point of view. I recommend to see it.
 One Hacker Way - Erik Meijer from Reaktor on Vimeo. </description>
    </item>
    
    <item>
      <title>Mockito on Android</title>
      <link>https://wittchen.io/posts/mockito-on-android/</link>
      <pubDate>Sun, 15 Mar 2015 15:44:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/mockito-on-android/</guid>
      <description>Overview #  When we write unit tests for an Android application, sometimes there&amp;rsquo;s a necessity to mock some classes or interfaces. Instead of writing implementations dedicated for unit tests by hand, we can use Mockito library. We can read article about Mockito on Android on Square&amp;rsquo;s blog. Mockito can make our tests cleaner and better. It can be used both in classic Java projects and Android projects. It&amp;rsquo;s one of the most popular mocking framework in Java and if you&amp;rsquo;re a Java developer who writes unit tests and tries to apply TDD approach, you should be familiar with it.</description>
    </item>
    
    <item>
      <title>Introducing prefser</title>
      <link>https://wittchen.io/posts/introducing-prefser/</link>
      <pubDate>Sun, 22 Feb 2015 22:39:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-prefser/</guid>
      <description>I&amp;rsquo;ve recently released Prefser, which is a wrapper for Android SharedPreferences with object serialization and RxJava Observables. Prefser wraps SharedPreferences and thanks to Java Generics provides you simpler API than classic SharedPreferences with only two methods:
void put(String key, Object value); &amp;lt;T&amp;gt; T get(String key, Class classOfT, T defaultValue); Classic SharedPreferences allows you to store only primitive data types and set of strings. Thanks to Gson serialization, Prefser allows you to store:</description>
    </item>
    
    <item>
      <title>Unit Testing Support for Android Studio 1.1</title>
      <link>https://wittchen.io/posts/unit-testing-support-for-android-studio-11/</link>
      <pubDate>Sun, 15 Feb 2015 12:53:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/unit-testing-support-for-android-studio-11/</guid>
      <description>As official Android website says:
 Version 1.1 of Android Studio and the Android gradle plugin brings support for unit testing your code. This feature is still considered experimental, we encourage you to try it and file any bugs you find in our bug tracker.
 It&amp;rsquo;s great news, because now we can write Unit Tests with JUnit 4.12 without any &amp;ldquo;hacks&amp;rdquo; or tricky configuration, which had to be done earlier.</description>
    </item>
    
    <item>
      <title>NetworkEvents v. 1.0.2</title>
      <link>https://wittchen.io/posts/network-events-v102/</link>
      <pubDate>Sun, 15 Feb 2015 00:16:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/network-events-v102/</guid>
      <description>I&amp;rsquo;ve recently released NetworkEvents v. 1.0.2. In case, you don&amp;rsquo;t know it, it&amp;rsquo;s an Android library listening network connection state and change of the Wifi signal strength. This version has small improvements:
 Updated ping method in NetworkHelper class. Detection of Internet access in WiFi network works faster and is more reliable. Added example of usage of NetworkEvents with Dagger in example-dagger directory in the repository of the project.  Right now, we check Internet connection in a different way.</description>
    </item>
    
    <item>
      <title>Hello Kotlin!</title>
      <link>https://wittchen.io/posts/hello-kotlin/</link>
      <pubDate>Sat, 07 Feb 2015 18:59:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/hello-kotlin/</guid>
      <description>I&amp;rsquo;ve recently played with Kotlin in order to create simple &amp;ldquo;Hello World&amp;rdquo; Android app using this new, fancy language from JetBrains. Kotlin is another programming language based on JVM, which can work with Java. It&amp;rsquo;s aim is to reduce code boilerplate and create projects faster. In my simple Android project, I&amp;rsquo;ve also used KotterKnife for injecting views. I&amp;rsquo;ve also added one simple ActivityUnitTestCase. Unfortunately, I couldn&amp;rsquo;t convert it into Kotlin, because I wasn&amp;rsquo;t allowed to call constructor of inherited class using super() method.</description>
    </item>
    
    <item>
      <title>Introducing NetworkEvents</title>
      <link>https://wittchen.io/posts/introducing-network-events/</link>
      <pubDate>Sat, 31 Jan 2015 20:35:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/introducing-network-events/</guid>
      <description>I have released NetworkEvents library for Android. It&amp;rsquo;s a wrapper for system Broadcast Receivers built with Otto library. It allows you to listen change of connectivity status (connected to WiFi network with or without Internet access, mobile network, off-line) and change of the WiFi signal strength very easily with @Subscribe annotation. The only thing you need to do, is to create Bus and NetworkEvents objects, register them in onResume() method and unregister them in onPause() method in your activity.</description>
    </item>
    
    <item>
      <title>Android resource converter</title>
      <link>https://wittchen.io/posts/android-resource-converter/</link>
      <pubDate>Sat, 17 Jan 2015 00:19:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/android-resource-converter/</guid>
      <description>In international projects sometimes there&amp;rsquo;s a need to send resource files to the client in order to have translated strings. Client doesn&amp;rsquo;t have to understand XML notation and editing two or more files at the same time is inconvenient. It&amp;rsquo;s easier to send file which can be edited in MS Excel or Libre Office Calc. I&amp;rsquo;ve created Python scripts, which are able to convert Android xml resources with translations to a single *.</description>
    </item>
    
    <item>
      <title>Kirai - flavored Android string formatting library</title>
      <link>https://wittchen.io/posts/kirai-flavored-android-string-formatting-library/</link>
      <pubDate>Tue, 13 Jan 2015 19:12:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/kirai-flavored-android-string-formatting-library/</guid>
      <description>Overview #  Recently I&amp;rsquo;ve developed and realased to Maven Central Repository Kirai, which is flavored Android string formatting library. Kirai means phrase in Swahili language. Project is inspired by phrase, TaggerString and BabushkaText. Kirai has fluent API similar to phrase with additional formatting similar to TaggerString and allows to add formatted pieces of text like BabushkaText. Development including writing Unit Tests took me about 2 days. Deployment and release to Maven Central Repository took me about 2 days as well.</description>
    </item>
    
    <item>
      <title>Interpreting data in csv files generated by EEG Analyzer</title>
      <link>https://wittchen.io/posts/interpreting-data-in-csv-files-generated-by-eeg-analyzer/</link>
      <pubDate>Tue, 06 Jan 2015 19:11:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/interpreting-data-in-csv-files-generated-by-eeg-analyzer/</guid>
      <description>Introduction #  Sometimes people send me e-mails concerning EEG Analyzer app. Usually they are not sure how to interpret or analyze results generated by the app and uploaded to Dropbox server. My app is quite &amp;ldquo;raw&amp;rdquo; and simple, because it is additional project created during writing my Master Thesis, which helped me to perform some experiments and analysis of EEG data. That&amp;rsquo;s why I didn&amp;rsquo;t focused on generating reports from gathered data.</description>
    </item>
    
    <item>
      <title>Synapse Indicator - Spotlight for Ubuntu</title>
      <link>https://wittchen.io/posts/synapse-indicator-spotlight-for-ubuntu/</link>
      <pubDate>Thu, 25 Dec 2014 17:06:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/synapse-indicator-spotlight-for-ubuntu/</guid>
      <description>Introduction #  If you were using Ubuntu for some time, you might have noticed that Ubuntu Dash from Unity is working quite slow. We can disable on-line search or a few other elements, but it&amp;rsquo;s still very slow. If we want to have fast search, we can use external software like synapse.
Synapse #  Synapse is searching really fast and we don&amp;rsquo;t have to wait a few seconds like in Ubuntu Dash or disable some search options.</description>
    </item>
    
    <item>
      <title>Detecting swipe gesture in mobile application</title>
      <link>https://wittchen.io/posts/detecting-swipe-gesture-in-mobile-application/</link>
      <pubDate>Thu, 25 Dec 2014 15:59:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/detecting-swipe-gesture-in-mobile-application/</guid>
      <description>Introduction #  Update: Swipe Detector project is now called swipe.
Some time ago, I needed to detect moment when user is swiping finger on the screen horizontally (from left to right or opposite) or when user swiped horizontally. I&amp;rsquo;ve decided to spend some time for analyzing [onTouch(MotionEvent event)](http://developer.android.com/reference/android/view/View.OnTouchListener.html#onTouch(android.view.View, android.view.MotionEvent)) and dispatchTouchEvent(MotionEvent event) method. We can read more about differences between triggering onTouch eventes on StackOverflow thread. Method like onTouch(MotionEvent event) allows to trigger any touch event, but it doesn&amp;rsquo;t allow to detect type of that event.</description>
    </item>
    
    <item>
      <title>Installing release and debug version of app on a single device</title>
      <link>https://wittchen.io/posts/installing-release-and-debug-version-of-app-on-a-single-device/</link>
      <pubDate>Thu, 25 Dec 2014 15:15:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/installing-release-and-debug-version-of-app-on-a-single-device/</guid>
      <description>Introduction #  During software development process developers and QAs may want to have installed release and debug version of the app on a single device, what can be very helpful when they want to develop and use application at the same time. Another advantage is the fact that debug and release version of the app may need different configuration. It this post I will show you an example in which we are changing application name and launcher icon, but we can also change different values during compilation in the same way (e.</description>
    </item>
    
    <item>
      <title>Basics of Git</title>
      <link>https://wittchen.io/posts/basics-of-git/</link>
      <pubDate>Thu, 27 Nov 2014 21:49:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/basics-of-git/</guid>
      <description>Introduction #  Git is very popular Version Control System used in many software projects today. In my opinion, it&amp;rsquo;s the best VCS available today. In order to start your adventure with this tool, you should know its basic commands and features. There are graphical tools, which allows to use Git without terminal, but I recommend you to use terminal. With CLI you can work faster, you can understand Git better and you have more control over your repository.</description>
    </item>
    
    <item>
      <title>How to update forked GitHub repository?</title>
      <link>https://wittchen.io/posts/how-to-update-forked-github-repository/</link>
      <pubDate>Fri, 07 Nov 2014 12:29:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-update-forked-github-repository/</guid>
      <description>When you fork GitHub repository, you usually want to have your fork up to date with the original repository. You can update your fork in a few easy steps. Just look at the following example of the Git commands:
Add the remote, call it upstream:
git remote add upstream https://github.com/whoever/whatever.git Fetch all the branches of that remote into remote-tracking branches, such as upstream/master:
git fetch upstream Make sure that you&amp;rsquo;re on your master branch:</description>
    </item>
    
    <item>
      <title>How to switch java version on Linux</title>
      <link>https://wittchen.io/posts/how-to-switch-java-version-on-linux/</link>
      <pubDate>Sun, 02 Nov 2014 12:33:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-switch-java-version-on-linux/</guid>
      <description>Sometimes we need to run specific program with a concrete version of JVM. We can also work with Java 7, but we want to try Java 8. In such cases, we can have installed both Java 7 and 8 on our system and easily switch between them. In order to show current java version, we can simply type: java -version in terminal. On my computer I received the following response:</description>
    </item>
    
    <item>
      <title>Java Gradle Template</title>
      <link>https://wittchen.io/posts/java-gradle-template/</link>
      <pubDate>Fri, 17 Oct 2014 23:11:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/java-gradle-template/</guid>
      <description>Some time ago, I had some troubles with configuring Java project with Gradle in IntelliJ IDEA CE. There is possibility to create new Gradle project in mentioned IDE, but for some reason it didn&amp;rsquo;t worked out-of-the box in my case on Ubuntu. I wanted to have pure, clean Java project with Gradle build system ready to open in IntelliJ IDEA. I found well configured simple project at: https://github.com/quinnliu/SampleGradleProject. Basing on that project, I created my simple template.</description>
    </item>
    
    <item>
      <title>Square is advocating against fragments</title>
      <link>https://wittchen.io/posts/square-is-advocating-against-fragments/</link>
      <pubDate>Sun, 12 Oct 2014 18:58:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/square-is-advocating-against-fragments/</guid>
      <description>Recently, Square engineers confirmed my doubts I always had about fragments. I definitely knew that something was wrong with them, but Google introduced fragments into Android API, so I thought it must be okay for some reason and I tried to live with them feeling pain. Finally, concrete company have written an article criticizing Android Fragments and I totally agree with them. Read the article at: http://corner.squareup.com/2014/10/advocating-against-android-fragments.html.</description>
    </item>
    
    <item>
      <title>The future of programming</title>
      <link>https://wittchen.io/posts/the-future-of-programming/</link>
      <pubDate>Sun, 12 Oct 2014 18:26:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/the-future-of-programming/</guid>
      <description>I highly recommend you to watch a short lecture presented by Bret Victor at Dropbox&amp;rsquo;s DBX conference on July 9, 2013. It really broadens the mind.
 Bret Victor - The Future of Programming from Bret Victor on Vimeo. References: http://worrydream.com/dbx/</description>
    </item>
    
    <item>
      <title>Different build config for debug and release version of the Android app</title>
      <link>https://wittchen.io/posts/different-build-config-for-debug-and-release-version-of-the-android-app/</link>
      <pubDate>Wed, 08 Oct 2014 17:52:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/different-build-config-for-debug-and-release-version-of-the-android-app/</guid>
      <description>Sometimes we may want to set different address of the back-end web service for debuggable and release version of our Android app. E.g. predefined static host and port for release version of the application and our local IP address and predefined port for debuggable version of the application. In second case, we can deploy back-end webservice on our local machine for testing purposes. We can customize all of that in build.</description>
    </item>
    
    <item>
      <title>Weather Icons for Android applications</title>
      <link>https://wittchen.io/posts/weather-icons-for-android-applications/</link>
      <pubDate>Thu, 02 Oct 2014 21:18:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/weather-icons-for-android-applications/</guid>
      <description>Some time ago I found Weather Icons project by Erik Flowers. It&amp;rsquo;s customized font with appropriate CSS, which allows you to use weather icons on the website. In addition, those icons can be customized. They can have different size or color. Moreover, they are compatible with the Bootstrap. I thought, that it would be nice, if I had something like that for Android applications. That&amp;rsquo;s why I created simple open-source project called Weather Icon View.</description>
    </item>
    
    <item>
      <title>Micro-location based on WiFi Access Points</title>
      <link>https://wittchen.io/posts/micro-location-based-on-wifi-access-points/</link>
      <pubDate>Sun, 21 Sep 2014 13:16:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/micro-location-based-on-wifi-access-points/</guid>
      <description>Introduction #  Recently, I started working on quite interesting project. One of its elements is micro-location inside the building based on WiFi Access Points. Company&amp;rsquo;s buildings have a lot of Access Points in different locations like regular rooms, conference rooms, corridors, sports building and restaurant. Having pool of Access Points with their names, locations and MAC addresses (or more precisely: BSSID) it&amp;rsquo;s possible to create micro-location for Android mobile devices.</description>
    </item>
    
    <item>
      <title>Versioning Android applications</title>
      <link>https://wittchen.io/posts/versioning-android-applications/</link>
      <pubDate>Sat, 13 Sep 2014 12:49:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/versioning-android-applications/</guid>
      <description>When we work in a team projects, our code constantly changes and being tested. Often some bugs occur in a specific version of application and no longer exists in next version of the project, because one programmer might fixed the bug according to the Boy Scout Rule and this is good. Nevertheless, sometimes we need to write documentation and check in which version bug occurred to be sure, that it was really fixed.</description>
    </item>
    
    <item>
      <title>Updating Android XML resources before compilation via Gradle</title>
      <link>https://wittchen.io/posts/updating-android-xml-resources-before-compilation-via-gradle/</link>
      <pubDate>Wed, 10 Sep 2014 21:22:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/updating-android-xml-resources-before-compilation-via-gradle/</guid>
      <description>Problem #  In a team project, we encountered one of the common problems connected with mobile applications. Android application sends requests to backend web service and we don&amp;rsquo;t have backend web service deployed right now on a separate server, so every mobile developer is compiling and running backend web service on the local machine for testing purposes. In the beginning, url of backend url looked as follows:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?</description>
    </item>
    
    <item>
      <title>Indicators for Ubuntu</title>
      <link>https://wittchen.io/posts/indicators-for-ubuntu/</link>
      <pubDate>Sun, 07 Sep 2014 20:47:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/indicators-for-ubuntu/</guid>
      <description>I recently found an article about Best Useful Indicators Collection for Ubuntu. Indicators are very useful feature of the Ubuntu and Unity. Ubuntu has some default indicators, but we can add new indicators if we want to. Mentioned article contains list of many indicators, but personally I prefer and use only a few of them. Here are my favorites:
Multi Load indicator #  Nice thing. This indicator monitors system resources.</description>
    </item>
    
    <item>
      <title>EEG Analyzer - Android app</title>
      <link>https://wittchen.io/posts/eeg-analyzer-android-app/</link>
      <pubDate>Mon, 01 Sep 2014 11:38:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/eeg-analyzer-android-app/</guid>
      <description>I recently published my side project connected with BCI and EEG technology in Google Play Store.  EEG Analyzer reads electrical activity of the brain with EEG technology and blink strength with EMG sensor from NeuroSky MindWave Mobile device connected via Bluetooth to Android device. In order to use this application, you need to have NeuroSky MindWave Mobile device, which can be ordered from http://neurosky.com/ website. Direct link to the mentioned product: http://store.</description>
    </item>
    
    <item>
      <title>Publishing Android application in Google Play store</title>
      <link>https://wittchen.io/posts/publishing-android-application-in-google-play-store/</link>
      <pubDate>Sun, 31 Aug 2014 14:44:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/publishing-android-application-in-google-play-store/</guid>
      <description>Introduction #  When you want to publish your Android application in Google Play Store, first you need to go to https://play.google.com/apps/publish/ website and create a Developer account. Its cost is $25. You can read more about that at: https://support.google.com/googleplay/android-developer/answer/113468?hl=en.
Problems with payments during registration #  Remember that you need to have appropriate debit card in order to proceed with payments. E.g. I have debit card in PKO BP (Polish bank), which has two-stage authorization.</description>
    </item>
    
    <item>
      <title>Stuff you should know about Android</title>
      <link>https://wittchen.io/posts/stuff-you-should-know-about-android/</link>
      <pubDate>Fri, 29 Aug 2014 16:29:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/stuff-you-should-know-about-android/</guid>
      <description>Today I had talk at Future Processing about Android. It was part of company&amp;rsquo;s Java show &amp;amp; tell series. I wanted to make it interesting both for people without any experience with Android development and for people who already know something about this platform. Presentation was divided into three main parts:
 Basics Challenges Techniques  Below, you can browse slides from the presentation.
View the presentation
Of course, slides does not show everything I prepared, but they are good summary of the talk.</description>
    </item>
    
    <item>
      <title>Reading/writing generic Java objects to JSON files and vice versa</title>
      <link>https://wittchen.io/posts/reading-writing-generic-java-objects-to-json-files-and-vice-versa/</link>
      <pubDate>Wed, 27 Aug 2014 21:19:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/reading-writing-generic-java-objects-to-json-files-and-vice-versa/</guid>
      <description>Overview #  Recently, I have written small set of methods for a FileHelper using Jackson library in Android application, which allows to save generic Java objects and list of generic objects in JSON format to a file and read them back in the original form. In the beginning I had some problems with saving and reading data properly. I could save and read data (e.g. list of the objects), but their type was LinkedHashMap, which wasn&amp;rsquo;t the list of desired generic objects.</description>
    </item>
    
    <item>
      <title>NetworkEvents - Android library</title>
      <link>https://wittchen.io/posts/network-events-android-library/</link>
      <pubDate>Tue, 19 Aug 2014 14:59:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/network-events-android-library/</guid>
      <description>Please note: This post is outdated. Check newest API on the GitHub.
Introduction #  NetworkEvents is an Android library, which I&amp;rsquo;ve created recently for one of the projects. It uses Otto Event Bus to support event driven programming. We can use appropriate annotations and perform any action, when connectivity status changes. E.g. when device will go offline, connects to the mobile network, connects to the WiFi network, connects to the WiFi network with Internet access or connects to WiFi network without Internet access.</description>
    </item>
    
    <item>
      <title>Software for common users on Ubuntu</title>
      <link>https://wittchen.io/posts/software-for-common-users-on-ubuntu/</link>
      <pubDate>Mon, 18 Aug 2014 16:17:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/software-for-common-users-on-ubuntu/</guid>
      <description>In this article, I&amp;rsquo;ll describe Ubuntu software for common users, which I personally use and which could be helpful on daily basis. Ubuntu software dedicated to programmers AKA developers will be described in separate article.
Chrome #  In my opinion, it&amp;rsquo;s currently the best web browser. We can download, unpack and install it, with the following commands:
sudo apt-get install libxss1 libappindicator1 libindicator7 wget https://dl.google.com/linux/direct/google-chrome-stable\_current\_amd64.deb sudo dpkg -i google-chrome*.deb Skype #  Maybe it&amp;rsquo;s not the best, but one of the most known messengers and lot of people use it.</description>
    </item>
    
    <item>
      <title>Ubuntu system boot problem</title>
      <link>https://wittchen.io/posts/ubuntu-system-boot-problem/</link>
      <pubDate>Sun, 17 Aug 2014 20:05:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/ubuntu-system-boot-problem/</guid>
      <description>Description of the problem #  Recently, after installing Linux Ubuntu 14.04 LTS on my computer, I encountered strange problem during the system boot. Before system launched, I received the following message: After that, I typed: exit and system started normally, but this error occurred every time after reboot, so I decided to fix it.
Fixing the problem #  Attempt #1 #  First, I tried to change rootdelay as error message said.</description>
    </item>
    
    <item>
      <title>Brain-Computer Interface for mobile devices - Master Thesis presentation</title>
      <link>https://wittchen.io/posts/bci-for-mobile-devices-master-thesis-presentation/</link>
      <pubDate>Tue, 08 Jul 2014 20:03:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/bci-for-mobile-devices-master-thesis-presentation/</guid>
      <description>Recently, I graduated from my university. Below, you can browse my Master Thesis presentation about Brain-Computer Interface for mobile devices. If you are interested in writing mobile Android applications communicating with NeuroSky MindWave Mobile device, you can check my EEG Reader project on GitHub, which can be treated as a basis for more advanced projects. During writing my Master Thesis, I created two another projects using similar concepts. Mentioned code may be a little bit outdated comparing to the newest Android trends, but feel free to fork and upgrade it.</description>
    </item>
    
    <item>
      <title>Selected aspects of creating mobile Android applications</title>
      <link>https://wittchen.io/posts/selected-aspects-of-creating-mobile-android-applications/</link>
      <pubDate>Mon, 07 Apr 2014 17:04:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/selected-aspects-of-creating-mobile-android-applications/</guid>
      <description>During the development of mobile applications, we should adjust our point of view to the specific projects we are working with. Applications for mobile devices are different than desktop or web applications. They have their own lifecycle, work on various devices with different screen resolutions. They have to work on devices with limited memory, clock rate of the CPU and battery life. In addition, these applications often have to be able to work without an Internet connection and their user interface has to be simple and well-designed due to smaller screen of a typical smartphone.</description>
    </item>
    
    <item>
      <title>How to highlight and click on ListView item in Android programmatically?</title>
      <link>https://wittchen.io/posts/how-to-highlight-and-click-on-listview-item-in-android-programmatically/</link>
      <pubDate>Thu, 06 Mar 2014 21:43:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-highlight-and-click-on-listview-item-in-android-programmatically/</guid>
      <description>There are many approaches concerning selecting items on Android&amp;rsquo;s ListView. Unfortunately most of them don&amp;rsquo;t work. I was struggling with this problem for some time and decided to publish my solution, which is actually quite easy.
The problem #  I want to highlight item on a ListView programmatically (in a source code - without touching item on the screen). I also want to click on item of the ListView programmatically.</description>
    </item>
    
    <item>
      <title>How to read contacts in Android device using ContentResolver?</title>
      <link>https://wittchen.io/posts/how-to-read-contacts-in-android-device-using-contentresolver/</link>
      <pubDate>Sun, 02 Mar 2014 22:23:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-read-contacts-in-android-device-using-contentresolver/</guid>
      <description>With Content Providers we can access data stored by Android system applications. Popular example of using Content Provider is retrieving contact list from the smartphone. We can also access Calendar or create our own Content Provider. More information about that can be found in documentation of Android. If we want to access Content Provider, we can use Content Resolver in our application&amp;rsquo;s context.
In this example, we will access contact list.</description>
    </item>
    
    <item>
      <title>Avoiding OutOfMemory Error while loading large Bitmaps in Android UI</title>
      <link>https://wittchen.io/posts/avoiding-outofmemory-error-while-loading-large-bitmaps-in-android-ui/</link>
      <pubDate>Sun, 23 Feb 2014 13:34:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/avoiding-outofmemory-error-while-loading-large-bitmaps-in-android-ui/</guid>
      <description>Sometimes we may encounter an error connected with loading too large Bitmaps into Android UI. In such cases, we may receive OutOfMemoryError in stack trace. In Android, we are working with limited memory and we shouldn&amp;rsquo;t load images with full resolution into UI. These images should be scaled down in order to save memory and increase performance of the application. It&amp;rsquo;s very well described in official Android documentation in section Loading Large Bitmaps Efficiently.</description>
    </item>
    
    <item>
      <title>Issue workflow in agile projects</title>
      <link>https://wittchen.io/posts/issue-workflow-in-agile-projects/</link>
      <pubDate>Wed, 15 Jan 2014 21:08:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/issue-workflow-in-agile-projects/</guid>
      <description>In team projects it&amp;rsquo;s important to prepare issue workflow and, so-called, definition of done in order to be sure, when particular task is actually done. It&amp;rsquo;s often practiced in agile projects and scrum process. When we take into consideration IT projects and version control system like Git, we can create Git branches with concrete purposes:
 master branch - latest stable version of the application - for Product Owner and client development branch - latest development version of the application with passed tests and code reviews, but waiting for approval of the Product Owner - for developers many single branches for each issue (task) in the project (e.</description>
    </item>
    
    <item>
      <title>How to connect to Android device via TCP/IP?</title>
      <link>https://wittchen.io/posts/how-to-connect-to-android-device-via-tcp-ip/</link>
      <pubDate>Sat, 12 Oct 2013 12:48:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-connect-to-android-device-via-tcp-ip/</guid>
      <description>While developing Android applications, we need to debug them on real devices. We also should be able to access debug output and execute Unix shell commands. In Android device (mobile phone or tablet), we can go to Settings and then to Developer options. Afterwards, we can enable USB Debugging. Now, we can connect our device via USB cable to the computer and we will be able to access it via Android Debug Bridge (ADB).</description>
    </item>
    
    <item>
      <title>Justifying block of text inside TextView in Android</title>
      <link>https://wittchen.io/posts/justifying-block-of-text-inside-textview-in-android/</link>
      <pubDate>Sat, 31 Aug 2013 22:14:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/justifying-block-of-text-inside-textview-in-android/</guid>
      <description>Justifying text inside TextView in Android is not that simple as we may expect it to be. Unfortunately, Android does not have attribute for TextView, which supports justifying text. We can set alignment to the right or to the left, but we cannot simply justify text with generic attributes. In order to do that, we need to perform a few tricks. First of all, we need to create file named justified_textview.</description>
    </item>
    
    <item>
      <title>Asynchronous loading and caching bitmaps with Volley</title>
      <link>https://wittchen.io/posts/asynchronous-loading-and-caching-bitmaps-with-volley/</link>
      <pubDate>Mon, 26 Aug 2013 23:37:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/asynchronous-loading-and-caching-bitmaps-with-volley/</guid>
      <description>We can use Volley library from Google for very clean, simple and easy loading of the images from Internet. Volley uses LRU cache, so first of all, we need to create BitmapLruCache class extending LruCache class.
package com.github.volley.example.toolbox; import com.android.volley.toolbox.ImageLoader.ImageCache; import android.graphics.Bitmap; import android.support.v4.util.LruCache; public class BitmapLruCache extends LruCache&amp;lt;String, Bitmap&amp;gt; implements ImageCache { public BitmapLruCache(int maxSize) { super(maxSize); } // Fix thanks to Steven&amp;#39;s comment: sizeOf method should not be overriden, // when we are passing max image cache entries in another place of the code // @Override // protected int sizeOf(String key, Bitmap value) { // return value.</description>
    </item>
    
    <item>
      <title>How to change Fragment layout on orientation change?</title>
      <link>https://wittchen.io/posts/how-to-change-fragment-layout-on-orientation-change/</link>
      <pubDate>Thu, 15 Aug 2013 22:50:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/how-to-change-fragment-layout-on-orientation-change/</guid>
      <description>When we work with Activities in Android, defining different layouts for different screen orientations is easy. The only thing we need to do, is to create two *.xml files with the same name for layouts in two separate directories (res/layout/ and res/layout-land/). In Fragments it&amp;rsquo;s not that easy. In such case, we need to perform additional operations in order to achieve our goal. Fragment in Android is not re-inflated on configuration change, but we can recreate layout and repopulate view manually.</description>
    </item>
    
    <item>
      <title>First Google Glass Hackathon in Poland</title>
      <link>https://wittchen.io/posts/first-google-glass-hackathon-in-poland/</link>
      <pubDate>Tue, 30 Jul 2013 18:46:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/first-google-glass-hackathon-in-poland/</guid>
      <description>Some time ago I participated in first Google Glass Hackathon in Poland, where I had possibility to test Google Glass, try it and write applications, which can be run on this cutting-edge device. It was very interesting experience. In addition, I took 2nd place with my team, what made me happy after leaving Warsaw late night. In a few hours, we created simple native application for Android platform, which can be used as a city guide with augmented reality, geolocation and image recognition.</description>
    </item>
    
    <item>
      <title>Brain Computer Interface for mobile devices - introduction</title>
      <link>https://wittchen.io/posts/bci-for-mobile-devices-intro/</link>
      <pubDate>Wed, 05 Jun 2013 16:50:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/bci-for-mobile-devices-intro/</guid>
      <description>Currently, I work on my Final Project and Master Thesis at Silesian University of Technology in Gliwice, Poland (original University name in Polish: Politechnika Śląska). I&amp;rsquo;ve decided to choose unconventional topic, which will allow me to use the knowlegde I already have, extend it and learn something new. Topic of my thesis is: Brain Computer Interface for mobile devices. BCI is a topic, which is not completely discovered nowadays. EEG and BCI have their origins in 1924, but up to now, they don&amp;rsquo;t have so many real life applications.</description>
    </item>
    
    <item>
      <title>5 essential tools for serious software development in a team projects</title>
      <link>https://wittchen.io/posts/5-essential-tools-for-serious-software-development-in-a-team-projects/</link>
      <pubDate>Wed, 27 Mar 2013 23:33:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/5-essential-tools-for-serious-software-development-in-a-team-projects/</guid>
      <description>Introduction #  Daily usage of tools mentioned in this post is quite obvious for me right now, but using them wasn&amp;rsquo;t obvious while I was working alone or when I was involved only in freelance or private projects. Whilst we don&amp;rsquo;t work in a group, we don&amp;rsquo;t have to care about lot of things, but when we work in a team (even small), we have to organize and optimize our work very well in order to obtain its high quality, work efficiently and make life of future developers of our code and co-workers easier.</description>
    </item>
    
    <item>
      <title>Displaying image from the Internet inside the TextView</title>
      <link>https://wittchen.io/posts/displaying-image-from-the-internet-resource-inside-the-textview-in-android/</link>
      <pubDate>Tue, 19 Mar 2013 23:04:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/displaying-image-from-the-internet-resource-inside-the-textview-in-android/</guid>
      <description>Sometimes, we have to work with legacy code and we have to change application&amp;rsquo;s behavior without modifying layouts, structure of the application and core components. Such situations can force us to do some tricks during development or maintenance process. For example, at the beginning, our app had to download data from the web service or RSS channel. This data consisted of the text, so we could use TextView in order to display such information.</description>
    </item>
    
    <item>
      <title>Improper data type in Android TextView</title>
      <link>https://wittchen.io/posts/improper-data-type-in-android-textview/</link>
      <pubDate>Sun, 17 Mar 2013 18:57:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/improper-data-type-in-android-textview/</guid>
      <description>Identifying the problem #  One of the common mistakes done by Android programmers is using improper data type in TextView. Let&amp;rsquo;s have a look on a simple code snippet:
int area; TextView sampleTextView = (TextView) findViewById(R.id.myTextViewInXml); sampleTextView.setText(area + &amp;#34; km&amp;#34;); Here, we simply set a value of the text in an exemplary TextView and append string value &amp;quot; km&amp;rdquo; at the end. It can be used with SeekBar. For example, when we change value of the SeekBar, we can also update value of the text inside the TextView.</description>
    </item>
    
    <item>
      <title>Distributed inter-process communication</title>
      <link>https://wittchen.io/posts/distributed-inter-process-communication/</link>
      <pubDate>Fri, 15 Feb 2013 19:17:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/distributed-inter-process-communication/</guid>
      <description>Project overview #  Some time ago, I created presentation for my university connected with Distributed Inter-Process Communication. It is a piece of software dedicated for Linux OS, created by Kamran Karimi, which allows to distribute software operations inside computer cluster. In addition, we can test it on a single machine during development process and run on a several machines in the production phase. I tested this solution on Ubuntu Linux.</description>
    </item>
    
    <item>
      <title>Endless ListView in Android</title>
      <link>https://wittchen.io/posts/endless-listview-in-android/</link>
      <pubDate>Thu, 14 Feb 2013 15:34:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/endless-listview-in-android/</guid>
      <description>Some time ago, I had to implement Endless ListView in Android application. I checked different solutions, but some of them were overprogrammed or did not work well. Fortunately, I found simple solution, which solves the problem. Code snippet presenting mentioned approach, is placed below.
public class EndlessScrollListener implements OnScrollListener { private int visibleThreshold = 20; private int currentPage = 0; @Override public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) { } @Override public void onScrollStateChanged(AbsListView view, int scrollState) { if (scrollState == SCROLL_STATE_IDLE) { if (listView.</description>
    </item>
    
    <item>
      <title>Custom background for ActionBar and SherlockActionBar</title>
      <link>https://wittchen.io/posts/custom-background-for-actionbar-and-sherlockactionbar/</link>
      <pubDate>Fri, 01 Feb 2013 22:31:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/custom-background-for-actionbar-and-sherlockactionbar/</guid>
      <description>When you want to set custom background for Android ActionBar or SherlockActionBar instead of playing with your styles or views, you can use the following simple code snippet.
@InjectResource(R.drawable.actionbar_custom_background) private Drawable actionBarCustomBackground; public void onCreate() { getSupportActionBar().setBackgroundDrawable(actionBarCustomBackground); } In this case, Drawable object is injected using RoboGuice library and set as a background for the ActionBar. In particular cases, you can use also getActionBar() method. In Drawable object you can store an image of 1 px width and it will be stretched for 100% of width of the ActionBar.</description>
    </item>
    
    <item>
      <title>Custom fonts in Android</title>
      <link>https://wittchen.io/posts/custom-fonts-in-android/</link>
      <pubDate>Thu, 31 Jan 2013 23:45:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/custom-fonts-in-android/</guid>
      <description>Using custom fonts in Android is quite simple, but requires to do some things programmatically and cannot be done using only XML file defining the view. Let&amp;rsquo;s have a look on an example. Here we have a simple Android view file:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;LinearLayout xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; android:orientation=&amp;#34;vertical&amp;#34; android:layout_width=&amp;#34;fill_parent&amp;#34; android:layout_height=&amp;#34;fill_parent&amp;#34; &amp;gt; &amp;lt;TextView android:id=&amp;#34;@+id/custom_font&amp;#34; android:layout_width=&amp;#34;fill_parent&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; android:text=&amp;#34;This is our custom font&amp;#34; /&amp;gt; &amp;lt;/LinearLayout&amp;gt; We want to use custom font for the TextView element with id: custom_font.</description>
    </item>
    
    <item>
      <title>Easy conversion from binary to decimal numbers in C</title>
      <link>https://wittchen.io/posts/easy-conversion-from-binary-to-decimal-numbers-in-c/</link>
      <pubDate>Mon, 28 Jan 2013 02:02:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/easy-conversion-from-binary-to-decimal-numbers-in-c/</guid>
      <description>Below, you can see simple and useful code snippet presenting conversion from binary to decimal number in C language without any sophisticated operations using only strtol function.
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt; int main(void) { const char binary[] = &amp;#34;11001&amp;#34;; int decimal = strtol(binary, NULL, 2); printf(&amp;#34;binary = \&amp;#34;%s\&amp;#34;, decimal = %d = 0x%02X\n&amp;#34;, binary, decimal, decimal); return 0; } /* my output binary = &amp;#34;11001&amp;#34;, decimal = 25 = 0x19 */ </description>
    </item>
    
    <item>
      <title>Android and Maven</title>
      <link>https://wittchen.io/posts/android-and-maven/</link>
      <pubDate>Thu, 24 Jan 2013 23:50:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/android-and-maven/</guid>
      <description>Overview #  Etymology #  Maven, a Yiddish word meaning accumulator of knowledge.
What is Maven? #  Maven is a tool that can be used for building and managing any Java-based project with all its dependencies (libraries).
Maven&amp;rsquo;s objectives #   Making build process easy Providing uniform build system (Project Object Model) Providing quality project information Providing guidelines for best practices development Allowing transparent migration to new features  Setting up Maven Android projects on MS Windows #  Configuring environment #    You need Eclipse Indigo or Juno installed</description>
    </item>
    
    <item>
      <title>Fixing bug with dissappearing map overlay after zoom in Android</title>
      <link>https://wittchen.io/posts/fixing-bug-with-dissappearing-map-overlay-after-zoom-in-android/</link>
      <pubDate>Mon, 21 Jan 2013 22:16:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/fixing-bug-with-dissappearing-map-overlay-after-zoom-in-android/</guid>
      <description>In Android 3.0 – HoneyComb (API 11) or higher occurs specific bug connected with map overlay. When we draw overlay on the map (e.g. routes, directions or polylines) after zooming to particular level, overlay disappear unexpectedly. We can fix this bug very easily by disabling hardware acceleration for drawing overlays. Below, you can see exemplary code snippet with map injected by RoboGuice and disabled hardware acceleration. Changing way of drawing overlays should fix the bug.</description>
    </item>
    
    <item>
      <title>Adding reversed numbers</title>
      <link>https://wittchen.io/posts/adding-reversed-numbers/</link>
      <pubDate>Mon, 21 Jan 2013 18:51:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/adding-reversed-numbers/</guid>
      <description>In this post I will show you my approach to adding reversed numbers. This problem occurred during the ACM Central European Programming Contest, in Prague in 1998.
General description of the problem #  Input #  The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space.</description>
    </item>
    
    <item>
      <title>Launching brand new blog</title>
      <link>https://wittchen.io/posts/launching-brand-new-blog/</link>
      <pubDate>Sat, 19 Jan 2013 22:24:00 +0000</pubDate>
      
      <guid>https://wittchen.io/posts/launching-brand-new-blog/</guid>
      <description>Hello! I&amp;rsquo;ve decided to create my own blog once again. This time I&amp;rsquo;m gonna write most of the posts only in English in order to make the articles more available and also to train my language skills (I&amp;rsquo;m Polish native speaker as some of you may already noticed). Template is clean and simple, because I&amp;rsquo;m going to focus on content - not the form. Stay tuned!</description>
    </item>
    
  </channel>
</rss>