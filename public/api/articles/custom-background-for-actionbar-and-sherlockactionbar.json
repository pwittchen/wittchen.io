{"title":"Custom background for ActionBar and SherlockActionBar","slug":"custom-background-for-actionbar-and-sherlockactionbar","date":"2013-02-01T21:31:00.000Z","updated":"2019-07-03T22:51:02.810Z","comments":true,"path":"api/articles/custom-background-for-actionbar-and-sherlockactionbar.json","excerpt":null,"covers":null,"content":"<p>When you want to set custom background for Android ActionBar or SherlockActionBar instead of playing with your styles or views, you can use the following simple code snippet.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@InjectResource</span>(R.drawable.actionbar_custom_background)</span><br><span class=\"line\"><span class=\"keyword\">private</span> Drawable actionBarCustomBackground;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  getSupportActionBar().setBackgroundDrawable(actionBarCustomBackground);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>In this case, Drawable object is injected using RoboGuice library and set as a background for the ActionBar. In particular cases, you can use also getActionBar() method.<br>In Drawable object you can store an image of 1 px width and it will be stretched for 100% of width of the ActionBar.<br>I have tested the code snippet presented above for SherlockActionBar and it worked fine.</p>\n","more":"<p>When you want to set custom background for Android ActionBar or SherlockActionBar instead of playing with your styles or views, you can use the following simple code snippet.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@InjectResource</span>(R.drawable.actionbar_custom_background)</span><br><span class=\"line\"><span class=\"keyword\">private</span> Drawable actionBarCustomBackground;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  getSupportActionBar().setBackgroundDrawable(actionBarCustomBackground);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>In this case, Drawable object is injected using RoboGuice library and set as a background for the ActionBar. In particular cases, you can use also getActionBar() method.<br>In Drawable object you can store an image of 1 px width and it will be stretched for 100% of width of the ActionBar.<br>I have tested the code snippet presented above for SherlockActionBar and it worked fine.</p>\n","categories":[],"tags":[{"name":"android","path":"api/tags/android.json"}]}