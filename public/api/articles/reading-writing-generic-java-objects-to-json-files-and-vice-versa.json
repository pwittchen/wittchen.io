{"title":"Reading/writing generic Java objects to JSON files and vice versa","slug":"reading-writing-generic-java-objects-to-json-files-and-vice-versa","date":"2014-08-27T19:19:00.000Z","updated":"2019-07-03T22:51:02.813Z","comments":true,"path":"api/articles/reading-writing-generic-java-objects-to-json-files-and-vice-versa.json","excerpt":null,"covers":null,"content":"<h2 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h2><p>Recently, I have written small set of methods for a FileHelper using <a href=\"http://jackson.codehaus.org/\" target=\"_blank\" rel=\"noopener\">Jackson library</a> in Android application, which allows to save <a href=\"http://en.wikipedia.org/wiki/Generics_in_Java\" target=\"_blank\" rel=\"noopener\">generic Java objects</a> and list of generic objects in <a href=\"http://en.wikipedia.org/wiki/JSON\" target=\"_blank\" rel=\"noopener\">JSON</a> format to a file and read them back in the original form. In the beginning I had some problems with saving and reading data properly. I could save and read data (e.g. list of the objects), but their type was <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html\" target=\"_blank\" rel=\"noopener\">LinkedHashMap</a>, which wasnâ€™t the list of desired generic objects. After adjusting Jackson library, I finally achieved my goal. You can see helper class below.</p>\n<h2 id=\"Helper-class\"><a href=\"#Helper-class\" class=\"headerlink\" title=\"Helper class\"></a>Helper class</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Helper is using Jackson library and Google Guava</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileHelper</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;Type&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveObjectToFile</span><span class=\"params\">(Object object, TypeReference&lt;Type&gt; type, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            FileOutputStream fileOutputStream = <span class=\"keyword\">new</span> FileOutputStream(fileName);</span><br><span class=\"line\">            OutputStreamWriter outputStreamWriter = <span class=\"keyword\">new</span> OutputStreamWriter(fileOutputStream, Charsets.UTF_8.name());</span><br><span class=\"line\">            Writer writer = <span class=\"keyword\">new</span> BufferedWriter(outputStreamWriter);</span><br><span class=\"line\">            mapper.writerWithType(type).writeValue(writer, object);</span><br><span class=\"line\">            fileOutputStream.close();</span><br><span class=\"line\">            outputStreamWriter.close();</span><br><span class=\"line\">            writer.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;ReturnedObject&gt; <span class=\"function\">ReturnedObject <span class=\"title\">readObjectFromFile</span><span class=\"params\">(String fileName, Class&lt;ReturnedObject&gt; returnedObjectClass)</span> </span>&#123;</span><br><span class=\"line\">        ReturnedObject object = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> JavaType type = mapper.getTypeFactory().constructType(returnedObjectClass);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            object = mapper.readValue(Files.toString(<span class=\"keyword\">new</span> File(fileName), Charsets.UTF_8), type);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;ReturnedObject&gt; <span class=\"function\">List&lt;ReturnedObject&gt; <span class=\"title\">readObjectListFromFile</span><span class=\"params\">(String fileName, Class&lt;ReturnedObject&gt; returnedObjectClass)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;ReturnedObject&gt; objectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> CollectionType collectionType = mapper.getTypeFactory().constructCollectionType(List.class, returnedObjectClass);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            objectList = mapper.readValue(Files.toString(<span class=\"keyword\">new</span> File(fileName), Charsets.UTF_8), collectionType);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> objectList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">fileExists</span><span class=\"params\">(String fileName)</span> </span>&#123;</span><br><span class=\"line\">        File file =  <span class=\"keyword\">new</span> File(fileName);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> file.exists();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p>You can use this helper in the following way:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// initializing object and list of the objects</span></span><br><span class=\"line\">MyObject myObject = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\">List&lt;MyObject&gt; myObjectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// saving object to file</span></span><br><span class=\"line\">FileHelper.saveObjectToFile(myObject, <span class=\"keyword\">new</span> TypeReference&lt;MyObject&gt;() &#123;&#125;, <span class=\"string\">\"my_object.json\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reading object from file</span></span><br><span class=\"line\">MyObject myObjectRead = FileHelper.readObjectFromFile(<span class=\"string\">\"my_object.json\"</span>, MyObject.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// saving list of the objects to file</span></span><br><span class=\"line\">FileHelper.saveObjectToFile(myObjectList, <span class=\"keyword\">new</span> TypeReference&lt;List&lt;MyObject&gt;&gt;() &#123;&#125;, <span class=\"string\">\"list_of_my_objects.json\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reading list of the objects from a file</span></span><br><span class=\"line\">List&lt;MyObject&gt; myObjectListRead = FileHelper.readObjectListFromFile(<span class=\"string\">\"list_of_my_objects.json\"</span>, MyObject.class);</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h2><p>Recently, I have written small set of methods for a FileHelper using <a href=\"http://jackson.codehaus.org/\" target=\"_blank\" rel=\"noopener\">Jackson library</a> in Android application, which allows to save <a href=\"http://en.wikipedia.org/wiki/Generics_in_Java\" target=\"_blank\" rel=\"noopener\">generic Java objects</a> and list of generic objects in <a href=\"http://en.wikipedia.org/wiki/JSON\" target=\"_blank\" rel=\"noopener\">JSON</a> format to a file and read them back in the original form. In the beginning I had some problems with saving and reading data properly. I could save and read data (e.g. list of the objects), but their type was <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html\" target=\"_blank\" rel=\"noopener\">LinkedHashMap</a>, which wasnâ€™t the list of desired generic objects. After adjusting Jackson library, I finally achieved my goal. You can see helper class below.</p>\n<h2 id=\"Helper-class\"><a href=\"#Helper-class\" class=\"headerlink\" title=\"Helper class\"></a>Helper class</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Helper is using Jackson library and Google Guava</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileHelper</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;Type&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveObjectToFile</span><span class=\"params\">(Object object, TypeReference&lt;Type&gt; type, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            FileOutputStream fileOutputStream = <span class=\"keyword\">new</span> FileOutputStream(fileName);</span><br><span class=\"line\">            OutputStreamWriter outputStreamWriter = <span class=\"keyword\">new</span> OutputStreamWriter(fileOutputStream, Charsets.UTF_8.name());</span><br><span class=\"line\">            Writer writer = <span class=\"keyword\">new</span> BufferedWriter(outputStreamWriter);</span><br><span class=\"line\">            mapper.writerWithType(type).writeValue(writer, object);</span><br><span class=\"line\">            fileOutputStream.close();</span><br><span class=\"line\">            outputStreamWriter.close();</span><br><span class=\"line\">            writer.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;ReturnedObject&gt; <span class=\"function\">ReturnedObject <span class=\"title\">readObjectFromFile</span><span class=\"params\">(String fileName, Class&lt;ReturnedObject&gt; returnedObjectClass)</span> </span>&#123;</span><br><span class=\"line\">        ReturnedObject object = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> JavaType type = mapper.getTypeFactory().constructType(returnedObjectClass);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            object = mapper.readValue(Files.toString(<span class=\"keyword\">new</span> File(fileName), Charsets.UTF_8), type);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;ReturnedObject&gt; <span class=\"function\">List&lt;ReturnedObject&gt; <span class=\"title\">readObjectListFromFile</span><span class=\"params\">(String fileName, Class&lt;ReturnedObject&gt; returnedObjectClass)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;ReturnedObject&gt; objectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> CollectionType collectionType = mapper.getTypeFactory().constructCollectionType(List.class, returnedObjectClass);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            objectList = mapper.readValue(Files.toString(<span class=\"keyword\">new</span> File(fileName), Charsets.UTF_8), collectionType);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException exception) &#123;</span><br><span class=\"line\">            exception.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> objectList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">fileExists</span><span class=\"params\">(String fileName)</span> </span>&#123;</span><br><span class=\"line\">        File file =  <span class=\"keyword\">new</span> File(fileName);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> file.exists();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p>You can use this helper in the following way:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// initializing object and list of the objects</span></span><br><span class=\"line\">MyObject myObject = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\">List&lt;MyObject&gt; myObjectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// saving object to file</span></span><br><span class=\"line\">FileHelper.saveObjectToFile(myObject, <span class=\"keyword\">new</span> TypeReference&lt;MyObject&gt;() &#123;&#125;, <span class=\"string\">\"my_object.json\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reading object from file</span></span><br><span class=\"line\">MyObject myObjectRead = FileHelper.readObjectFromFile(<span class=\"string\">\"my_object.json\"</span>, MyObject.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// saving list of the objects to file</span></span><br><span class=\"line\">FileHelper.saveObjectToFile(myObjectList, <span class=\"keyword\">new</span> TypeReference&lt;List&lt;MyObject&gt;&gt;() &#123;&#125;, <span class=\"string\">\"list_of_my_objects.json\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reading list of the objects from a file</span></span><br><span class=\"line\">List&lt;MyObject&gt; myObjectListRead = FileHelper.readObjectListFromFile(<span class=\"string\">\"list_of_my_objects.json\"</span>, MyObject.class);</span><br></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"java","path":"api/tags/java.json"}]}