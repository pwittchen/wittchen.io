{"title":"Creating a fat AAR","slug":"creating-fat-aar","date":"2018-10-01T22:01:31.000Z","updated":"2019-07-03T22:51:02.810Z","comments":true,"path":"api/articles/creating-fat-aar.json","excerpt":null,"covers":null,"content":"<p>I recently wrote a new library called <a href=\"https://github.com/pwittchen/neurosky-android-sdk\" target=\"_blank\" rel=\"noopener\">NeuroSky Android SDK</a>. It’s used for writing Android apps using signals of the brain waves received from the NeuroSky MindWave Mobile headsets. Probably I’ll write a separate article about it because it’s quite interesting topic. This library uses ThinkGear library, which is distributed by the NeuroSky as a <code>*.jar</code> file, so I couldn’t use it as a Gradle or Maven dependency in my project and I had to put this <code>*.jar</code> file into the <code>lib</code> directory and link it in the <code>build.gradle</code> file. Moreover, I wanted to create a library, which can be added to the project as a single Gradle dependency without messing around with additional <code>*.jar</code> files or custom configuration. Due to this fact, I decided to create a fat <code>*.aar</code> file and deploy it to the Maven Central repository. For those who are not familar with Android, <code>*.aar</code> is an Android version or <code>*.jar</code> file, which can be used as library in the project. I didn’t want to reinvent the wheel, so I searched for the different solutions. Unfortunatey, a few of them didn’t work, but luckilly I’ve found what I wanted. It’s <a href=\"https://github.com/Mobbeel/fataar-gradle-plugin\" target=\"_blank\" rel=\"noopener\">fat AAR Gradle Plugin</a> developed by <a href=\"https://github.com/Mobbeel\" target=\"_blank\" rel=\"noopener\">Mobbeel</a> company.</p>\n<p>Here’s how I configured everything:</p>\n<p>In my top-level <code>build.gradle</code> file I defined dependency to my custom <code>*.jar</code> file and other dependencies.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ext.deps = [ <span class=\"comment\">// other dependencies goes here...</span></span><br><span class=\"line\">             thinkgear : files(<span class=\"string\">'library/libs/ThinkGear.jar'</span>)</span><br><span class=\"line\">           ]</span><br></pre></td></tr></table></figure>\n\n<p>Next, I added dependency to the plugin within a <code>buildscript</code> section.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    google()</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">    maven &#123;</span><br><span class=\"line\">      url <span class=\"string\">'https://plugins.gradle.org/m2/'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">// other plugin dependencies goes here...</span></span><br><span class=\"line\">   <span class=\"keyword\">classpath</span> <span class=\"string\">'gradle.plugin.com.mobbeel.plugin:mobbeel-fataar:1.2.0'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>After that, in the <code>library/build.gradle</code> file, I could add dependency to the <code>*.jar</code> file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">  api deps.thinkgear</span><br><span class=\"line\">  // other dependencies goes here...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then plugin could be applied.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.mobbeel.plugin'</span></span><br></pre></td></tr></table></figure>\n\n<p>And I could configure it.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatAARConfig &#123;</span><br><span class=\"line\">  includeAllInnerDependencies <span class=\"keyword\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>When we set <code>includeAllInnerDependencies</code> parameter to <code>true</code>, then all transitive dependencies will be included in the fat <code>*.aar</code>. Default value is <code>false</code> and it’s OK for now. I could even skip this step, but sometimes I prefer to define things explicitly.</p>\n<p>Now, we can build our library.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew build</span><br></pre></td></tr></table></figure>\n\n<p>and fat <code>*.aar</code> will be generated in the <code>library/builds/output/</code> directory as a <code>library-release.aar</code> file. There should be also <code>library-debug.aar</code>. We can unzip this file and notice that it has the following structure:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── AndroidManifest.xml</span><br><span class=\"line\">├── classes.jar</span><br><span class=\"line\">└── libs</span><br><span class=\"line\">    ├── rxandroid.jar</span><br><span class=\"line\">    ├── rxjava-2.2.2.jar</span><br><span class=\"line\">    └── ThinkGear.jar</span><br></pre></td></tr></table></figure>\n\n<p>so we can clearly see that all project dependencies are included in the <code>*.aar</code> file. Library deployed to the Maven Central Repository looks the same and now, users can add library as a single dependency to the project in the <code>build.gradle</code> file.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  implementation <span class=\"string\">'com.github.pwittchen:neurosky-android-sdk:0.0.2'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>*.jar</code> library shipped inside <code>*.aar</code> file will be included in the project and everything will just work.</p>\n","more":"<p>I recently wrote a new library called <a href=\"https://github.com/pwittchen/neurosky-android-sdk\" target=\"_blank\" rel=\"noopener\">NeuroSky Android SDK</a>. It’s used for writing Android apps using signals of the brain waves received from the NeuroSky MindWave Mobile headsets. Probably I’ll write a separate article about it because it’s quite interesting topic. This library uses ThinkGear library, which is distributed by the NeuroSky as a <code>*.jar</code> file, so I couldn’t use it as a Gradle or Maven dependency in my project and I had to put this <code>*.jar</code> file into the <code>lib</code> directory and link it in the <code>build.gradle</code> file. Moreover, I wanted to create a library, which can be added to the project as a single Gradle dependency without messing around with additional <code>*.jar</code> files or custom configuration. Due to this fact, I decided to create a fat <code>*.aar</code> file and deploy it to the Maven Central repository. For those who are not familar with Android, <code>*.aar</code> is an Android version or <code>*.jar</code> file, which can be used as library in the project. I didn’t want to reinvent the wheel, so I searched for the different solutions. Unfortunatey, a few of them didn’t work, but luckilly I’ve found what I wanted. It’s <a href=\"https://github.com/Mobbeel/fataar-gradle-plugin\" target=\"_blank\" rel=\"noopener\">fat AAR Gradle Plugin</a> developed by <a href=\"https://github.com/Mobbeel\" target=\"_blank\" rel=\"noopener\">Mobbeel</a> company.</p>\n<p>Here’s how I configured everything:</p>\n<p>In my top-level <code>build.gradle</code> file I defined dependency to my custom <code>*.jar</code> file and other dependencies.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ext.deps = [ <span class=\"comment\">// other dependencies goes here...</span></span><br><span class=\"line\">             thinkgear : files(<span class=\"string\">'library/libs/ThinkGear.jar'</span>)</span><br><span class=\"line\">           ]</span><br></pre></td></tr></table></figure>\n\n<p>Next, I added dependency to the plugin within a <code>buildscript</code> section.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    google()</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">    maven &#123;</span><br><span class=\"line\">      url <span class=\"string\">'https://plugins.gradle.org/m2/'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">// other plugin dependencies goes here...</span></span><br><span class=\"line\">   <span class=\"keyword\">classpath</span> <span class=\"string\">'gradle.plugin.com.mobbeel.plugin:mobbeel-fataar:1.2.0'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>After that, in the <code>library/build.gradle</code> file, I could add dependency to the <code>*.jar</code> file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">  api deps.thinkgear</span><br><span class=\"line\">  // other dependencies goes here...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then plugin could be applied.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.mobbeel.plugin'</span></span><br></pre></td></tr></table></figure>\n\n<p>And I could configure it.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatAARConfig &#123;</span><br><span class=\"line\">  includeAllInnerDependencies <span class=\"keyword\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>When we set <code>includeAllInnerDependencies</code> parameter to <code>true</code>, then all transitive dependencies will be included in the fat <code>*.aar</code>. Default value is <code>false</code> and it’s OK for now. I could even skip this step, but sometimes I prefer to define things explicitly.</p>\n<p>Now, we can build our library.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew build</span><br></pre></td></tr></table></figure>\n\n<p>and fat <code>*.aar</code> will be generated in the <code>library/builds/output/</code> directory as a <code>library-release.aar</code> file. There should be also <code>library-debug.aar</code>. We can unzip this file and notice that it has the following structure:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── AndroidManifest.xml</span><br><span class=\"line\">├── classes.jar</span><br><span class=\"line\">└── libs</span><br><span class=\"line\">    ├── rxandroid.jar</span><br><span class=\"line\">    ├── rxjava-2.2.2.jar</span><br><span class=\"line\">    └── ThinkGear.jar</span><br></pre></td></tr></table></figure>\n\n<p>so we can clearly see that all project dependencies are included in the <code>*.aar</code> file. Library deployed to the Maven Central Repository looks the same and now, users can add library as a single dependency to the project in the <code>build.gradle</code> file.</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  implementation <span class=\"string\">'com.github.pwittchen:neurosky-android-sdk:0.0.2'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>*.jar</code> library shipped inside <code>*.aar</code> file will be included in the project and everything will just work.</p>\n","categories":[],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"android","path":"api/tags/android.json"},{"name":"gradle","path":"api/tags/gradle.json"}]}