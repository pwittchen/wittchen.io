{"title":"Review your changes in the code before the commit","slug":"review-your-changes-before-the-commit","date":"2017-03-26T20:18:00.000Z","updated":"2019-07-03T22:51:02.813Z","comments":true,"path":"api/articles/review-your-changes-before-the-commit.json","excerpt":null,"covers":null,"content":"<p>Most of the people use git as follows.</p>\n<ol>\n<li>they create a feature branch</li>\n<li>they make some changes</li>\n<li>they add all the changes: <code>git add -A</code></li>\n<li>they commit changes: <code>git commit -m &quot;I&#39;ve done changes&quot;</code></li>\n<li>they push it: <code>git push</code></li>\n</ol>\n<p>There’s a problem with such approach. When we created a lot of changes, it may happen that we forgot to delete something and we pushed some garbage to the remote repository. </p>\n<p>It’s better to <strong>review our own changes before the commit</strong>. </p>\n<p>When we’ve done some changes, instead of typing </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n\n<p>we can type </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -p</span><br></pre></td></tr></table></figure>\n\n<p>It will allow us to review our own changes and approve or disapprove them with typing <code>y</code> (yes) or <code>n</code> (no). </p>\n<p>After that process, all changes approved by us are “staged”. Changes, which are not approved are not staged. We can discard unstaged (and also unapproved) changes by typing <code>git checkout -- .</code>. After that, our repository is clean - unwanted changes are discarded &amp; changes, which we approved are staged. Next, we can simply commit &amp; push our changes to the remote repository. </p>\n<p>This approach is, in my opinion, very useful and helps to avoid pushing unwanted code to the remote repository, what will hopefully make your co-workers happy.</p>\n","more":"<p>Most of the people use git as follows.</p>\n<ol>\n<li>they create a feature branch</li>\n<li>they make some changes</li>\n<li>they add all the changes: <code>git add -A</code></li>\n<li>they commit changes: <code>git commit -m &quot;I&#39;ve done changes&quot;</code></li>\n<li>they push it: <code>git push</code></li>\n</ol>\n<p>There’s a problem with such approach. When we created a lot of changes, it may happen that we forgot to delete something and we pushed some garbage to the remote repository. </p>\n<p>It’s better to <strong>review our own changes before the commit</strong>. </p>\n<p>When we’ve done some changes, instead of typing </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n\n<p>we can type </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -p</span><br></pre></td></tr></table></figure>\n\n<p>It will allow us to review our own changes and approve or disapprove them with typing <code>y</code> (yes) or <code>n</code> (no). </p>\n<p>After that process, all changes approved by us are “staged”. Changes, which are not approved are not staged. We can discard unstaged (and also unapproved) changes by typing <code>git checkout -- .</code>. After that, our repository is clean - unwanted changes are discarded &amp; changes, which we approved are staged. Next, we can simply commit &amp; push our changes to the remote repository. </p>\n<p>This approach is, in my opinion, very useful and helps to avoid pushing unwanted code to the remote repository, what will hopefully make your co-workers happy.</p>\n","categories":[],"tags":[{"name":"git","path":"api/tags/git.json"}]}