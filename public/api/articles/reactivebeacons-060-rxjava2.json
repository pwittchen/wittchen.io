{"title":"ReactiveBeacons - release of v. 0.6.0 with support for RxJava2","slug":"reactivebeacons-060-rxjava2","date":"2017-04-03T16:20:00.000Z","updated":"2019-07-03T22:51:02.813Z","comments":true,"path":"api/articles/reactivebeacons-060-rxjava2.json","excerpt":null,"covers":null,"content":"<p>Thanks to <a href=\"https://github.com/BugsBunnyBR\" target=\"_blank\" rel=\"noopener\">@BugsBunnyBR</a> I released new version of <a href=\"https://github.com/pwittchen/ReactiveBeacons\" target=\"_blank\" rel=\"noopener\">ReactiveBeacons</a> library with the RxJava2.x support. It’s an Android library scanning BLE (Bluetooth Low Energy) beacons nearby with RxJava Observables. I also kept backward compatibility with RxJava1.x. Different versions of the libraries are located on the separate git branches. It’s a similar approach to original <a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a> project. I have separate builds on Travis CI, separate artifacts and JavaDocs. Such approach generates more overhead, but in such case, RxJava1.x can be kept in a maintenance mode and RxJava2.x can be a subject of the future development. What has been done in this version?</p>\n<ul>\n<li>migrated library to RxJava2.x on RxJava2.x branch and released it as <code>reactivebeacons-rx2</code> artifact</li>\n<li>kept library compatible with RxJava1.x on a RxJava1.x branch and released it as <code>reactivebeacons</code> artifact</li>\n<li>removed master branch</li>\n<li>bumped library dependencies</li>\n<li>added permission annotations</li>\n<li>organized Gradle configuration</li>\n<li>transformed instrumentation unit tests to pure java unit tests</li>\n<li>started executing unit tests on Travis CI server</li>\n<li>created separate JavaDoc for RxJava1.x and RxJava2.x</li>\n</ul>\n<p>If you want to add RxJava2.x version to your Android project, add the following dependency to <code>build.gradle</code> file:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.pwittchen:reactivebeacons-rx2:0.6.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>For RxJava1.x you can use old artifact id:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.pwittchen:reactivebeacons:0.6.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>This library was one of the first experiments with my migrations to RxJava2.x. I have plans to migrate rest of my libraries soon. Thanks to the awesome open-source community on GitHub, this process goes faster and I don’t have to do everything by myself.</p>\n","more":"<p>Thanks to <a href=\"https://github.com/BugsBunnyBR\" target=\"_blank\" rel=\"noopener\">@BugsBunnyBR</a> I released new version of <a href=\"https://github.com/pwittchen/ReactiveBeacons\" target=\"_blank\" rel=\"noopener\">ReactiveBeacons</a> library with the RxJava2.x support. It’s an Android library scanning BLE (Bluetooth Low Energy) beacons nearby with RxJava Observables. I also kept backward compatibility with RxJava1.x. Different versions of the libraries are located on the separate git branches. It’s a similar approach to original <a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a> project. I have separate builds on Travis CI, separate artifacts and JavaDocs. Such approach generates more overhead, but in such case, RxJava1.x can be kept in a maintenance mode and RxJava2.x can be a subject of the future development. What has been done in this version?</p>\n<ul>\n<li>migrated library to RxJava2.x on RxJava2.x branch and released it as <code>reactivebeacons-rx2</code> artifact</li>\n<li>kept library compatible with RxJava1.x on a RxJava1.x branch and released it as <code>reactivebeacons</code> artifact</li>\n<li>removed master branch</li>\n<li>bumped library dependencies</li>\n<li>added permission annotations</li>\n<li>organized Gradle configuration</li>\n<li>transformed instrumentation unit tests to pure java unit tests</li>\n<li>started executing unit tests on Travis CI server</li>\n<li>created separate JavaDoc for RxJava1.x and RxJava2.x</li>\n</ul>\n<p>If you want to add RxJava2.x version to your Android project, add the following dependency to <code>build.gradle</code> file:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.pwittchen:reactivebeacons-rx2:0.6.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>For RxJava1.x you can use old artifact id:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.pwittchen:reactivebeacons:0.6.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>This library was one of the first experiments with my migrations to RxJava2.x. I have plans to migrate rest of my libraries soon. Thanks to the awesome open-source community on GitHub, this process goes faster and I don’t have to do everything by myself.</p>\n","categories":[],"tags":[{"name":"android","path":"api/tags/android.json"},{"name":"open-source","path":"api/tags/open-source.json"},{"name":"bluetooth","path":"api/tags/bluetooth.json"},{"name":"ble","path":"api/tags/ble.json"}]}