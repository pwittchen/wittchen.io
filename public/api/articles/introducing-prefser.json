{"title":"Introducing prefser","slug":"introducing-prefser","date":"2015-02-22T21:39:00.000Z","updated":"2019-07-03T22:51:02.813Z","comments":true,"path":"api/articles/introducing-prefser.json","excerpt":null,"covers":["/images/posts/2015/introducing-prefser/prefser_observable_diagram.png"],"content":"<p>I’ve recently released <a href=\"https://github.com/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">Prefser</a>, which is a wrapper for Android <a href=\"http://developer.android.com/reference/android/content/SharedPreferences.html\" target=\"_blank\" rel=\"noopener\">SharedPreferences</a> with object serialization and <a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a> Observables. Prefser wraps SharedPreferences and thanks to Java Generics provides you simpler API than classic SharedPreferences with only two methods:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">put</span><span class=\"params\">(String key, Object value)</span></span>;</span><br><span class=\"line\">&lt;T&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(String key, Class classOfT, T defaultValue)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>Classic SharedPreferences allows you to store only primitive data types and set of strings. Thanks to <a href=\"https://code.google.com/p/google-gson/\" target=\"_blank\" rel=\"noopener\">Gson</a> serialization, Prefser allows you to store:</p>\n<ul>\n<li>Primitive data types (boolean, float, int, long, double)</li>\n<li>Strings</li>\n<li>Custom Objects</li>\n<li>Lists</li>\n<li>Arrays</li>\n<li>Sets</li>\n</ul>\n<p>In addition, Prefser transforms <a href=\"http://developer.android.com/reference/android/content/SharedPreferences.OnSharedPreferenceChangeListener.html\" target=\"_blank\" rel=\"noopener\">OnSharedPreferenceChangeListener</a> into Observables from RxJava:</p>\n<p>Observable<String> observe(final SharedPreferences sharedPreferences);<br>Observable<String> observeDefaultPreferences();</p>\n<p>You can <a href=\"https://github.com/pwittchen/prefser#subscribing-for-data-updates\" target=\"_blank\" rel=\"noopener\">subscribe one of these Observables</a> and monitor updates of SharedPreferences with powerful RxJava. Moreover, you can <a href=\"https://github.com/pwittchen/prefser#reading-data-from-observables\" target=\"_blank\" rel=\"noopener\">observe single preference</a> under a specified key with the following method:</p>\n<p><T> Observable<T> observe(final String key, final Class classOfT, final T defaultValue)</p>\n<p><img src=\"/images/posts/2015/introducing-prefser/prefser_observable_diagram.png\" alt=\"prefser_observable_diagram\"></p>\n<p>For more details, examples and download instructions visit GitHub webiste of the project at: </p>\n<p><a href=\"https://github.com/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">https://github.com/pwittchen/prefser</a></p>\n<p>I’ve provided sample app using Prefeser in this repository, which you can check to get familiar with the project. Library is open source, has <a href=\"https://github.com/pwittchen/prefser/blob/master/library/src/androidTest/java/com/github/pwittchen/prefser/library/PrefserTest.java\" target=\"_blank\" rel=\"noopener\">Unit Tests</a>, <a href=\"https://travis-ci.org/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">Travis CI job</a> and is available on Maven Central Repository. You can depend on it through Maven or Gradle.</p>\n","more":"<p>I’ve recently released <a href=\"https://github.com/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">Prefser</a>, which is a wrapper for Android <a href=\"http://developer.android.com/reference/android/content/SharedPreferences.html\" target=\"_blank\" rel=\"noopener\">SharedPreferences</a> with object serialization and <a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a> Observables. Prefser wraps SharedPreferences and thanks to Java Generics provides you simpler API than classic SharedPreferences with only two methods:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">put</span><span class=\"params\">(String key, Object value)</span></span>;</span><br><span class=\"line\">&lt;T&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(String key, Class classOfT, T defaultValue)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>Classic SharedPreferences allows you to store only primitive data types and set of strings. Thanks to <a href=\"https://code.google.com/p/google-gson/\" target=\"_blank\" rel=\"noopener\">Gson</a> serialization, Prefser allows you to store:</p>\n<ul>\n<li>Primitive data types (boolean, float, int, long, double)</li>\n<li>Strings</li>\n<li>Custom Objects</li>\n<li>Lists</li>\n<li>Arrays</li>\n<li>Sets</li>\n</ul>\n<p>In addition, Prefser transforms <a href=\"http://developer.android.com/reference/android/content/SharedPreferences.OnSharedPreferenceChangeListener.html\" target=\"_blank\" rel=\"noopener\">OnSharedPreferenceChangeListener</a> into Observables from RxJava:</p>\n<p>Observable<String> observe(final SharedPreferences sharedPreferences);<br>Observable<String> observeDefaultPreferences();</p>\n<p>You can <a href=\"https://github.com/pwittchen/prefser#subscribing-for-data-updates\" target=\"_blank\" rel=\"noopener\">subscribe one of these Observables</a> and monitor updates of SharedPreferences with powerful RxJava. Moreover, you can <a href=\"https://github.com/pwittchen/prefser#reading-data-from-observables\" target=\"_blank\" rel=\"noopener\">observe single preference</a> under a specified key with the following method:</p>\n<p><T> Observable<T> observe(final String key, final Class classOfT, final T defaultValue)</p>\n<p><img src=\"/images/posts/2015/introducing-prefser/prefser_observable_diagram.png\" alt=\"prefser_observable_diagram\"></p>\n<p>For more details, examples and download instructions visit GitHub webiste of the project at: </p>\n<p><a href=\"https://github.com/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">https://github.com/pwittchen/prefser</a></p>\n<p>I’ve provided sample app using Prefeser in this repository, which you can check to get familiar with the project. Library is open source, has <a href=\"https://github.com/pwittchen/prefser/blob/master/library/src/androidTest/java/com/github/pwittchen/prefser/library/PrefserTest.java\" target=\"_blank\" rel=\"noopener\">Unit Tests</a>, <a href=\"https://travis-ci.org/pwittchen/prefser\" target=\"_blank\" rel=\"noopener\">Travis CI job</a> and is available on Maven Central Repository. You can depend on it through Maven or Gradle.</p>\n","categories":[],"tags":[{"name":"android","path":"api/tags/android.json"},{"name":"java","path":"api/tags/java.json"},{"name":"open-source","path":"api/tags/open-source.json"}]}