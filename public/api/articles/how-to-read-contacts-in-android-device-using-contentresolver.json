{"title":"How to read contacts in Android device using ContentResolver?","slug":"how-to-read-contacts-in-android-device-using-contentresolver","date":"2014-03-02T21:23:00.000Z","updated":"2019-07-03T22:51:02.810Z","comments":true,"path":"api/articles/how-to-read-contacts-in-android-device-using-contentresolver.json","excerpt":null,"covers":null,"content":"<p>With <a href=\"http://developer.android.com/guide/topics/providers/content-providers.html\" target=\"_blank\" rel=\"noopener\">Content Providers</a> we can access data stored by Android system applications. Popular example of using Content Provider is retrieving contact list from the smartphone. We can also access Calendar or create our own Content Provider. More information about that can be found in documentation of Android. If we want to access Content Provider, we can use <a href=\"http://developer.android.com/reference/android/content/ContentResolver.html\" target=\"_blank\" rel=\"noopener\">Content Resolver</a> in our application’s context.</p>\n<p>In this example, we will access contact list. First of all, it’s good to create Contact entity class, which will be model of our data.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Contact</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String email;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String uriString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can access application’s context through GenericApplication class extending Application class.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GenericApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Application instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        instance = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Context <span class=\"title\">getContext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance.getApplicationContext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can use static application’s context in many situations. Nevertheless, we should avoid this practice when we work with UI and Views, because we may have problems with styles, look &amp; feel of the application and other issues.</p>\n<p>Now, we can create ContactsProvider class (we can call it as we want).</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContactsProvider</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri QUERY_URI = ContactsContract.Contacts.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String CONTACT_ID = ContactsContract.Contacts._ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String DISPLAY_NAME = ContactsContract.Contacts.DISPLAY_NAME;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri EMAIL_CONTENT_URI = ContactsContract.CommonDataKinds.Email.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String EMAIL_CONTACT_ID = ContactsContract.CommonDataKinds.Email.CONTACT_ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String EMAIL_DATA = ContactsContract.CommonDataKinds.Email.DATA;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String HAS_PHONE_NUMBER = ContactsContract.Contacts.HAS_PHONE_NUMBER;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String PHONE_NUMBER = ContactsContract.CommonDataKinds.Phone.NUMBER;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri PHONE_CONTENT_URI = ContactsContract.CommonDataKinds.Phone.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String PHONE_CONTACT_ID = ContactsContract.CommonDataKinds.Phone.CONTACT_ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String STARRED_CONTACT = ContactsContract.Contacts.STARRED;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ContentResolver contentResolver;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContactsProvider</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        contentResolver = GenericApplication.getContext().getContentResolver();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Contact&gt; <span class=\"title\">getContacts</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        List&lt;Contact&gt; contactList = <span class=\"keyword\">new</span> ArrayList&lt;Contact&gt;();</span><br><span class=\"line\">        String[] projection = <span class=\"keyword\">new</span> String[]&#123;CONTACT_ID, DISPLAY_NAME, HAS_PHONE_NUMBER, STARRED_CONTACT&#125;;</span><br><span class=\"line\">        String selection = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Cursor cursor = contentResolver.query(QUERY_URI, projection, selection, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (cursor.moveToNext()) &#123;</span><br><span class=\"line\">            Contact contact = getContact(cursor);</span><br><span class=\"line\">            contactList.add(contact);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cursor.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> contactList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Contact <span class=\"title\">getContact</span><span class=\"params\">(Cursor cursor)</span> </span>&#123;</span><br><span class=\"line\">        String contactId = cursor.getString(cursor.getColumnIndex(CONTACT_ID));</span><br><span class=\"line\">        String name = (cursor.getString(cursor.getColumnIndex(DISPLAY_NAME)));</span><br><span class=\"line\">        Uri uri = Uri.withAppendedPath(QUERY_URI, String.valueOf(contactId));</span><br><span class=\"line\"></span><br><span class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW);</span><br><span class=\"line\">        intent.setData(uri);</span><br><span class=\"line\">        String intentUriString = intent.toUri(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Contact contact = <span class=\"keyword\">new</span> Contact();</span><br><span class=\"line\">        contact.id = Integer.valueOf(contactId);</span><br><span class=\"line\">        contact.name = name;</span><br><span class=\"line\">        contact.uriString = intentUriString;</span><br><span class=\"line\"></span><br><span class=\"line\">        getPhone(cursor, contactId, contact);</span><br><span class=\"line\">        getEmail(contactId, contact);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> contact;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmail</span><span class=\"params\">(String contactId, Contact contact)</span> </span>&#123;</span><br><span class=\"line\">        Cursor emailCursor = contentResolver.query(EMAIL_CONTENT_URI, <span class=\"keyword\">null</span>, EMAIL_CONTACT_ID + <span class=\"string\">\" = ?\"</span>, <span class=\"keyword\">new</span> String[]&#123;contactId&#125;, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (emailCursor.moveToNext()) &#123;</span><br><span class=\"line\">            String email = emailCursor.getString(emailCursor.getColumnIndex(EMAIL_DATA));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!TextUtils.isEmpty(email)) &#123;</span><br><span class=\"line\">                contact.email = email;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        emailCursor.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getPhone</span><span class=\"params\">(Cursor cursor, String contactId, Contact contact)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hasPhoneNumber = Integer.parseInt(cursor.getString(cursor.getColumnIndex(HAS_PHONE_NUMBER)));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hasPhoneNumber &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Cursor phoneCursor = contentResolver.query(PHONE_CONTENT_URI, <span class=\"keyword\">null</span>, PHONE_CONTACT_ID + <span class=\"string\">\" = ?\"</span>, <span class=\"keyword\">new</span> String[]&#123;contactId&#125;, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (phoneCursor.moveToNext()) &#123;</span><br><span class=\"line\">                String phoneNumber = phoneCursor.getString(phoneCursor.getColumnIndex(PHONE_NUMBER));</span><br><span class=\"line\">                contact.phone = phoneNumber;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            phoneCursor.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can filter our data, by manipulating selection parameter. E.g. if we want to retrieve only starred contacts, we can change “selection” parameter in the following way:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String selection = STARRED_CONTACT + <span class=\"string\">\"='1'\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>If we want to retrieve more or less data, we can manipulate “projection” parameter. ContentResolver is just kind of proxy for SQLite databases available in Android applications, which allows us to access this data in a safe way. We can use SQL language in order to select proper data. Check Android documentation for more details.</p>\n<p>We also need to remember to add proper parameter to our <code>AndroidManifest.xml</code> file.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_CONTACTS\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>If we want to use GenericApplication class, we should also add proper attribute to <code>application</code> tag in <code>AndroidManifest.xml</code> file.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">application</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.pwittchen.example.generics.GenericApplication\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>That’s it! </p>\n<p>Now, we can use our class to read contacts very easily. We can even create an <a href=\"http://developer.android.com/reference/android/widget/Adapter.html\" target=\"_blank\" rel=\"noopener\">adapter</a> and display contacts on the list or do whatever we want to.</p>\n","more":"<p>With <a href=\"http://developer.android.com/guide/topics/providers/content-providers.html\" target=\"_blank\" rel=\"noopener\">Content Providers</a> we can access data stored by Android system applications. Popular example of using Content Provider is retrieving contact list from the smartphone. We can also access Calendar or create our own Content Provider. More information about that can be found in documentation of Android. If we want to access Content Provider, we can use <a href=\"http://developer.android.com/reference/android/content/ContentResolver.html\" target=\"_blank\" rel=\"noopener\">Content Resolver</a> in our application’s context.</p>\n<p>In this example, we will access contact list. First of all, it’s good to create Contact entity class, which will be model of our data.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Contact</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String email;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String uriString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can access application’s context through GenericApplication class extending Application class.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GenericApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Application instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        instance = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Context <span class=\"title\">getContext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance.getApplicationContext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can use static application’s context in many situations. Nevertheless, we should avoid this practice when we work with UI and Views, because we may have problems with styles, look &amp; feel of the application and other issues.</p>\n<p>Now, we can create ContactsProvider class (we can call it as we want).</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContactsProvider</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri QUERY_URI = ContactsContract.Contacts.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String CONTACT_ID = ContactsContract.Contacts._ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String DISPLAY_NAME = ContactsContract.Contacts.DISPLAY_NAME;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri EMAIL_CONTENT_URI = ContactsContract.CommonDataKinds.Email.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String EMAIL_CONTACT_ID = ContactsContract.CommonDataKinds.Email.CONTACT_ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String EMAIL_DATA = ContactsContract.CommonDataKinds.Email.DATA;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String HAS_PHONE_NUMBER = ContactsContract.Contacts.HAS_PHONE_NUMBER;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String PHONE_NUMBER = ContactsContract.CommonDataKinds.Phone.NUMBER;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri PHONE_CONTENT_URI = ContactsContract.CommonDataKinds.Phone.CONTENT_URI;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String PHONE_CONTACT_ID = ContactsContract.CommonDataKinds.Phone.CONTACT_ID;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String STARRED_CONTACT = ContactsContract.Contacts.STARRED;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ContentResolver contentResolver;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContactsProvider</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        contentResolver = GenericApplication.getContext().getContentResolver();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Contact&gt; <span class=\"title\">getContacts</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        List&lt;Contact&gt; contactList = <span class=\"keyword\">new</span> ArrayList&lt;Contact&gt;();</span><br><span class=\"line\">        String[] projection = <span class=\"keyword\">new</span> String[]&#123;CONTACT_ID, DISPLAY_NAME, HAS_PHONE_NUMBER, STARRED_CONTACT&#125;;</span><br><span class=\"line\">        String selection = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Cursor cursor = contentResolver.query(QUERY_URI, projection, selection, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (cursor.moveToNext()) &#123;</span><br><span class=\"line\">            Contact contact = getContact(cursor);</span><br><span class=\"line\">            contactList.add(contact);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cursor.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> contactList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Contact <span class=\"title\">getContact</span><span class=\"params\">(Cursor cursor)</span> </span>&#123;</span><br><span class=\"line\">        String contactId = cursor.getString(cursor.getColumnIndex(CONTACT_ID));</span><br><span class=\"line\">        String name = (cursor.getString(cursor.getColumnIndex(DISPLAY_NAME)));</span><br><span class=\"line\">        Uri uri = Uri.withAppendedPath(QUERY_URI, String.valueOf(contactId));</span><br><span class=\"line\"></span><br><span class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW);</span><br><span class=\"line\">        intent.setData(uri);</span><br><span class=\"line\">        String intentUriString = intent.toUri(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Contact contact = <span class=\"keyword\">new</span> Contact();</span><br><span class=\"line\">        contact.id = Integer.valueOf(contactId);</span><br><span class=\"line\">        contact.name = name;</span><br><span class=\"line\">        contact.uriString = intentUriString;</span><br><span class=\"line\"></span><br><span class=\"line\">        getPhone(cursor, contactId, contact);</span><br><span class=\"line\">        getEmail(contactId, contact);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> contact;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmail</span><span class=\"params\">(String contactId, Contact contact)</span> </span>&#123;</span><br><span class=\"line\">        Cursor emailCursor = contentResolver.query(EMAIL_CONTENT_URI, <span class=\"keyword\">null</span>, EMAIL_CONTACT_ID + <span class=\"string\">\" = ?\"</span>, <span class=\"keyword\">new</span> String[]&#123;contactId&#125;, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (emailCursor.moveToNext()) &#123;</span><br><span class=\"line\">            String email = emailCursor.getString(emailCursor.getColumnIndex(EMAIL_DATA));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!TextUtils.isEmpty(email)) &#123;</span><br><span class=\"line\">                contact.email = email;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        emailCursor.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getPhone</span><span class=\"params\">(Cursor cursor, String contactId, Contact contact)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> hasPhoneNumber = Integer.parseInt(cursor.getString(cursor.getColumnIndex(HAS_PHONE_NUMBER)));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hasPhoneNumber &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Cursor phoneCursor = contentResolver.query(PHONE_CONTENT_URI, <span class=\"keyword\">null</span>, PHONE_CONTACT_ID + <span class=\"string\">\" = ?\"</span>, <span class=\"keyword\">new</span> String[]&#123;contactId&#125;, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (phoneCursor.moveToNext()) &#123;</span><br><span class=\"line\">                String phoneNumber = phoneCursor.getString(phoneCursor.getColumnIndex(PHONE_NUMBER));</span><br><span class=\"line\">                contact.phone = phoneNumber;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            phoneCursor.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can filter our data, by manipulating selection parameter. E.g. if we want to retrieve only starred contacts, we can change “selection” parameter in the following way:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String selection = STARRED_CONTACT + <span class=\"string\">\"='1'\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>If we want to retrieve more or less data, we can manipulate “projection” parameter. ContentResolver is just kind of proxy for SQLite databases available in Android applications, which allows us to access this data in a safe way. We can use SQL language in order to select proper data. Check Android documentation for more details.</p>\n<p>We also need to remember to add proper parameter to our <code>AndroidManifest.xml</code> file.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_CONTACTS\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>If we want to use GenericApplication class, we should also add proper attribute to <code>application</code> tag in <code>AndroidManifest.xml</code> file.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">application</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.pwittchen.example.generics.GenericApplication\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>That’s it! </p>\n<p>Now, we can use our class to read contacts very easily. We can even create an <a href=\"http://developer.android.com/reference/android/widget/Adapter.html\" target=\"_blank\" rel=\"noopener\">adapter</a> and display contacts on the list or do whatever we want to.</p>\n","categories":[],"tags":[{"name":"android","path":"api/tags/android.json"},{"name":"java","path":"api/tags/java.json"}]}