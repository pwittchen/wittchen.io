{"title":"Creating a Docker container with Alpine Linux including Java 8 and 9","slug":"creating-a-docker-container-with-alpine-linux-including-java-8-and-9","date":"2017-12-27T13:43:00.000Z","updated":"2019-07-03T22:51:02.810Z","comments":true,"path":"api/articles/creating-a-docker-container-with-alpine-linux-including-java-8-and-9.json","excerpt":null,"covers":null,"content":"<p>Recently, I’ve decided to refresh my knowledge regarding <a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker</a> and created an image with <a href=\"https://alpinelinux.org/\" target=\"_blank\" rel=\"noopener\">Alpine Linux</a> and Java 9, which can be a useful base for the future projects. I used Alpine as a base image because it became quite popular in the Docker world due to its simplicity and the fact that it’s pretty lightweight when we compare it to containers based on other Linux distributions. Pure Alpine Docker container has about 4.144 MB, what is really impressing.</p>\n<h2 id=\"Container-with-Java-9\"><a href=\"#Container-with-Java-9\" class=\"headerlink\" title=\"Container with Java 9\"></a>Container with Java 9</h2><p>My <code>Dockerfile</code> looks pretty simple:</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> pwittchen</span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> wget http://download.java.net/java/jdk9-alpine/archive/181/binaries/jdk-9-ea+181_linux-x64-musl_bin.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> tar -xzvf *.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x jdk-9</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mv jdk-9 /usr/<span class=\"built_in\">local</span>/share</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> JAVA_HOME=/usr/local/share/jdk-<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=<span class=\"string\">\"$JAVA_HOME/bin:$&#123;PATH&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> rm -rf *.tar.gz</span></span><br></pre></td></tr></table></figure>\n\n<p>We’re downloading JDK, unpacking it, moving to <code>/usr/local/share</code> directory, creating <code>$JAVA_HOME</code> environmental variable and adding <code>$JAVA_HOME/bin</code> to the <code>$PATH</code>. After that, we’re removing downloaded <code>*.tar.gz</code> file. We can find it on Docker Hub: <a href=\"https://hub.docker.com/r/pwittchen/alpine-java9/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/pwittchen/alpine-java9/</a> To pull the image from Docker Hub, just type:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull pwittchen/alpine-java9</span><br></pre></td></tr></table></figure>\n\n<p>To run it with CLI, type:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -i -t pwittchen/alpine-java9</span><br></pre></td></tr></table></figure>\n\n<p>Then, we can play around with jshell inside the container:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ # jshell</span><br><span class=\"line\">Dec 27, 2017 1:18:10 PM java.util.prefs.FileSystemPreferences$1 run</span><br><span class=\"line\">INFO: Created user preferences directory.</span><br><span class=\"line\">|  Welcome to JShell -- Version 9-ea</span><br><span class=\"line\">|  For an introduction type: /help intro</span><br><span class=\"line\"></span><br><span class=\"line\">jshell&gt; System.out.println(&quot;hello from docker!&quot;)</span><br><span class=\"line\">hello from docker!</span><br></pre></td></tr></table></figure>\n\n<p>This container is not so small and has about 919.2 MB. It contains whole JDK, so probably this size could be reduced.</p>\n<p><strong>Note!</strong> </p>\n<p>Right now (21st of March 2018), this solution doesn’t work any longer. Please, search for an official Alpine image with Java 9 or use image with Ubuntu and Java 9 located in <a href=\"https://github.com/pwittchen/dockerfiles-java\" target=\"_blank\" rel=\"noopener\">dockerfiles-java</a> repo.</p>\n<h2 id=\"Container-with-Java-8\"><a href=\"#Container-with-Java-8\" class=\"headerlink\" title=\"Container with Java 8\"></a>Container with Java 8</h2><p>I’ve also created another image with Java 8 (just in case):</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> pwittchen</span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk update</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk fetch openjdk8</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add openjdk8</span></span><br></pre></td></tr></table></figure>\n\n<p>We can also find it on GitHub: <a href=\"https://github.com/pwittchen/dockerfiles-java\" target=\"_blank\" rel=\"noopener\">github.com/pwittchen/dockerfiles-java</a> (inside the <code>alpine-java8</code> directory), Docker Hub: <a href=\"https://hub.docker.com/r/pwittchen/alpine-java8/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/pwittchen/alpine-java8/</a> and pull it from the Docker Hub:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull pwittchen/alpine-java8</span><br></pre></td></tr></table></figure>\n\n<p>and run it with CLI as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -i -t pwittchen/alpine-java8</span><br></pre></td></tr></table></figure>\n\n<p>In this case, container has 118.5 MB, which is better result than for the previous container. In this case, we’re installing Java 8 for Alpine from official repository, so probably it’s already optimized. I hope, you’ll find it useful while developing your projects in Java 8 or Java 9.</p>\n","more":"<p>Recently, I’ve decided to refresh my knowledge regarding <a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker</a> and created an image with <a href=\"https://alpinelinux.org/\" target=\"_blank\" rel=\"noopener\">Alpine Linux</a> and Java 9, which can be a useful base for the future projects. I used Alpine as a base image because it became quite popular in the Docker world due to its simplicity and the fact that it’s pretty lightweight when we compare it to containers based on other Linux distributions. Pure Alpine Docker container has about 4.144 MB, what is really impressing.</p>\n<h2 id=\"Container-with-Java-9\"><a href=\"#Container-with-Java-9\" class=\"headerlink\" title=\"Container with Java 9\"></a>Container with Java 9</h2><p>My <code>Dockerfile</code> looks pretty simple:</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> pwittchen</span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> wget http://download.java.net/java/jdk9-alpine/archive/181/binaries/jdk-9-ea+181_linux-x64-musl_bin.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> tar -xzvf *.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x jdk-9</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mv jdk-9 /usr/<span class=\"built_in\">local</span>/share</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> JAVA_HOME=/usr/local/share/jdk-<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=<span class=\"string\">\"$JAVA_HOME/bin:$&#123;PATH&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> rm -rf *.tar.gz</span></span><br></pre></td></tr></table></figure>\n\n<p>We’re downloading JDK, unpacking it, moving to <code>/usr/local/share</code> directory, creating <code>$JAVA_HOME</code> environmental variable and adding <code>$JAVA_HOME/bin</code> to the <code>$PATH</code>. After that, we’re removing downloaded <code>*.tar.gz</code> file. We can find it on Docker Hub: <a href=\"https://hub.docker.com/r/pwittchen/alpine-java9/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/pwittchen/alpine-java9/</a> To pull the image from Docker Hub, just type:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull pwittchen/alpine-java9</span><br></pre></td></tr></table></figure>\n\n<p>To run it with CLI, type:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -i -t pwittchen/alpine-java9</span><br></pre></td></tr></table></figure>\n\n<p>Then, we can play around with jshell inside the container:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ # jshell</span><br><span class=\"line\">Dec 27, 2017 1:18:10 PM java.util.prefs.FileSystemPreferences$1 run</span><br><span class=\"line\">INFO: Created user preferences directory.</span><br><span class=\"line\">|  Welcome to JShell -- Version 9-ea</span><br><span class=\"line\">|  For an introduction type: /help intro</span><br><span class=\"line\"></span><br><span class=\"line\">jshell&gt; System.out.println(&quot;hello from docker!&quot;)</span><br><span class=\"line\">hello from docker!</span><br></pre></td></tr></table></figure>\n\n<p>This container is not so small and has about 919.2 MB. It contains whole JDK, so probably this size could be reduced.</p>\n<p><strong>Note!</strong> </p>\n<p>Right now (21st of March 2018), this solution doesn’t work any longer. Please, search for an official Alpine image with Java 9 or use image with Ubuntu and Java 9 located in <a href=\"https://github.com/pwittchen/dockerfiles-java\" target=\"_blank\" rel=\"noopener\">dockerfiles-java</a> repo.</p>\n<h2 id=\"Container-with-Java-8\"><a href=\"#Container-with-Java-8\" class=\"headerlink\" title=\"Container with Java 8\"></a>Container with Java 8</h2><p>I’ve also created another image with Java 8 (just in case):</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> pwittchen</span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk update</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk fetch openjdk8</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add openjdk8</span></span><br></pre></td></tr></table></figure>\n\n<p>We can also find it on GitHub: <a href=\"https://github.com/pwittchen/dockerfiles-java\" target=\"_blank\" rel=\"noopener\">github.com/pwittchen/dockerfiles-java</a> (inside the <code>alpine-java8</code> directory), Docker Hub: <a href=\"https://hub.docker.com/r/pwittchen/alpine-java8/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/pwittchen/alpine-java8/</a> and pull it from the Docker Hub:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull pwittchen/alpine-java8</span><br></pre></td></tr></table></figure>\n\n<p>and run it with CLI as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -i -t pwittchen/alpine-java8</span><br></pre></td></tr></table></figure>\n\n<p>In this case, container has 118.5 MB, which is better result than for the previous container. In this case, we’re installing Java 8 for Alpine from official repository, so probably it’s already optimized. I hope, you’ll find it useful while developing your projects in Java 8 or Java 9.</p>\n","categories":[],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"linux","path":"api/tags/linux.json"},{"name":"docker","path":"api/tags/docker.json"},{"name":"alpine","path":"api/tags/alpine.json"}]}