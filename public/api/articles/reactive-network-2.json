{"title":"ReactiveNetwork - release of v. 0.2.0","slug":"reactive-network-2","date":"2016-02-11T18:19:00.000Z","updated":"2019-07-03T22:51:02.813Z","comments":true,"path":"api/articles/reactive-network-2.json","excerpt":null,"covers":null,"content":"<p>I’ve recently released new version of <a href=\"https://github.com/pwittchen/ReactiveNetwork\" target=\"_blank\" rel=\"noopener\">ReactiveNetwork</a> library for Android. Here are the fresh <strong>release notes</strong> for <a href=\"https://github.com/pwittchen/ReactiveNetwork/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">version 0.2.0</a>:</p>\n<ul>\n<li>added possibility to observe WiFi signal level with <code>observeWifiSignalLevel(context, numLevels)</code> and <code>observeWifiSignalLevel(context)</code> method</li>\n<li>created <code>WifiSignalLevel</code> enum</li>\n<li>added internet check to parameters of <code>getConnectivityStatus(context, checkInternet)</code> method</li>\n<li>made <code>getConnectivityStatus(context, checkInternet)</code> method public</li>\n<li>changed String variable status in <code>ConnectivityStatus</code> enum to description and made it public</li>\n<li>changed output of the <code>toString()</code> method in <code>ConnectivityStatus</code> to keep consistency with another enum</li>\n<li>made <code>ReactiveNetwork</code> class non-final</li>\n<li>bumped Kotlin version in sample app to 1.0.0-rc-1036</li>\n<li>increased immutability of code of the library</li>\n<li>updated sample apps and documentation</li>\n</ul>\n<p>Thanks to <a href=\"https://github.com/llp\" target=\"_blank\" rel=\"noopener\">@llp</a> and his Pull Request, we are able to <a href=\"https://github.com/pwittchen/ReactiveNetwork#observing-wifi-signal-level\" target=\"_blank\" rel=\"noopener\">observe WiFi signal level</a> AKA <a href=\"https://en.wikipedia.org/wiki/Received_signal_strength_indication\" target=\"_blank\" rel=\"noopener\">RSSI</a> now! </p>\n<p>It’s one of the most interesting features in the newest release. We can do it as follows: </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> ReactiveNetwork().observeWifiSignalLevel(context, numLevels)</span><br><span class=\"line\">    .subscribeOn(Schedulers.io())</span><br><span class=\"line\">    ... <span class=\"comment\">// anything else what you can do with RxJava</span></span><br><span class=\"line\">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">    .subscribe(<span class=\"keyword\">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(Integer level)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something with level</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>or we can observe an enum value instead of integer: </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> ReactiveNetwork().observeWifiSignalLevel(context)</span><br><span class=\"line\">    .subscribeOn(Schedulers.io())</span><br><span class=\"line\">    ... <span class=\"comment\">// anything else what you can do with RxJava</span></span><br><span class=\"line\">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">    .subscribe(<span class=\"keyword\">new</span> Action1&lt;WifiSignalLevel&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(WifiSignalLevel signalLevel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something with signalLevel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>WifiSignalLevel</code> enum can have the following values:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> WifiSignalLevel &#123;</span><br><span class=\"line\">  NO_SIGNAL(<span class=\"number\">0</span>, <span class=\"string\">\"no signal\"</span>),</span><br><span class=\"line\">  POOR(<span class=\"number\">1</span>, <span class=\"string\">\"poor\"</span>),</span><br><span class=\"line\">  FAIR(<span class=\"number\">2</span>, <span class=\"string\">\"fair\"</span>),</span><br><span class=\"line\">  GOOD(<span class=\"number\">3</span>, <span class=\"string\">\"good\"</span>),</span><br><span class=\"line\">  EXCELLENT(<span class=\"number\">4</span>, <span class=\"string\">\"excellent\"</span>);</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Any feedback will be appreciated! </p>\n<p>Happy coding!</p>\n","more":"<p>I’ve recently released new version of <a href=\"https://github.com/pwittchen/ReactiveNetwork\" target=\"_blank\" rel=\"noopener\">ReactiveNetwork</a> library for Android. Here are the fresh <strong>release notes</strong> for <a href=\"https://github.com/pwittchen/ReactiveNetwork/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">version 0.2.0</a>:</p>\n<ul>\n<li>added possibility to observe WiFi signal level with <code>observeWifiSignalLevel(context, numLevels)</code> and <code>observeWifiSignalLevel(context)</code> method</li>\n<li>created <code>WifiSignalLevel</code> enum</li>\n<li>added internet check to parameters of <code>getConnectivityStatus(context, checkInternet)</code> method</li>\n<li>made <code>getConnectivityStatus(context, checkInternet)</code> method public</li>\n<li>changed String variable status in <code>ConnectivityStatus</code> enum to description and made it public</li>\n<li>changed output of the <code>toString()</code> method in <code>ConnectivityStatus</code> to keep consistency with another enum</li>\n<li>made <code>ReactiveNetwork</code> class non-final</li>\n<li>bumped Kotlin version in sample app to 1.0.0-rc-1036</li>\n<li>increased immutability of code of the library</li>\n<li>updated sample apps and documentation</li>\n</ul>\n<p>Thanks to <a href=\"https://github.com/llp\" target=\"_blank\" rel=\"noopener\">@llp</a> and his Pull Request, we are able to <a href=\"https://github.com/pwittchen/ReactiveNetwork#observing-wifi-signal-level\" target=\"_blank\" rel=\"noopener\">observe WiFi signal level</a> AKA <a href=\"https://en.wikipedia.org/wiki/Received_signal_strength_indication\" target=\"_blank\" rel=\"noopener\">RSSI</a> now! </p>\n<p>It’s one of the most interesting features in the newest release. We can do it as follows: </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> ReactiveNetwork().observeWifiSignalLevel(context, numLevels)</span><br><span class=\"line\">    .subscribeOn(Schedulers.io())</span><br><span class=\"line\">    ... <span class=\"comment\">// anything else what you can do with RxJava</span></span><br><span class=\"line\">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">    .subscribe(<span class=\"keyword\">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(Integer level)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something with level</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>or we can observe an enum value instead of integer: </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> ReactiveNetwork().observeWifiSignalLevel(context)</span><br><span class=\"line\">    .subscribeOn(Schedulers.io())</span><br><span class=\"line\">    ... <span class=\"comment\">// anything else what you can do with RxJava</span></span><br><span class=\"line\">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">    .subscribe(<span class=\"keyword\">new</span> Action1&lt;WifiSignalLevel&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(WifiSignalLevel signalLevel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something with signalLevel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>WifiSignalLevel</code> enum can have the following values:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> WifiSignalLevel &#123;</span><br><span class=\"line\">  NO_SIGNAL(<span class=\"number\">0</span>, <span class=\"string\">\"no signal\"</span>),</span><br><span class=\"line\">  POOR(<span class=\"number\">1</span>, <span class=\"string\">\"poor\"</span>),</span><br><span class=\"line\">  FAIR(<span class=\"number\">2</span>, <span class=\"string\">\"fair\"</span>),</span><br><span class=\"line\">  GOOD(<span class=\"number\">3</span>, <span class=\"string\">\"good\"</span>),</span><br><span class=\"line\">  EXCELLENT(<span class=\"number\">4</span>, <span class=\"string\">\"excellent\"</span>);</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Any feedback will be appreciated! </p>\n<p>Happy coding!</p>\n","categories":[],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"android","path":"api/tags/android.json"},{"name":"open-source","path":"api/tags/open-source.json"}]}