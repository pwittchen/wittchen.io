{"title":"Android and Maven","slug":"android-and-maven","date":"2013-01-24T22:50:00.000Z","updated":"2019-07-03T22:51:02.806Z","comments":true,"path":"api/articles/android-and-maven.json","excerpt":null,"covers":null,"content":"<h2 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h2><h3 id=\"Etymology\"><a href=\"#Etymology\" class=\"headerlink\" title=\"Etymology\"></a>Etymology</h3><p>Maven, a <a href=\"http://en.wikipedia.org/wiki/Maven\" target=\"_blank\" rel=\"noopener\">Yiddish</a> word meaning accumulator of knowledge.</p>\n<h3 id=\"What-is-Maven\"><a href=\"#What-is-Maven\" class=\"headerlink\" title=\"What is Maven?\"></a>What is Maven?</h3><p><a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">Maven</a> is a tool that can be used for building and managing any Java-based project with all its dependencies (libraries).</p>\n<h3 id=\"Maven’s-objectives\"><a href=\"#Maven’s-objectives\" class=\"headerlink\" title=\"Maven’s objectives\"></a>Maven’s objectives</h3><ul>\n<li>Making build process easy</li>\n<li>Providing uniform build system (Project Object Model)</li>\n<li>Providing quality project information</li>\n<li>Providing guidelines for best practices development</li>\n<li>Allowing transparent migration to new features</li>\n</ul>\n<h2 id=\"Setting-up-Maven-Android-projects-on-MS-Windows\"><a href=\"#Setting-up-Maven-Android-projects-on-MS-Windows\" class=\"headerlink\" title=\"Setting up Maven Android projects on MS Windows\"></a>Setting up Maven Android projects on MS Windows</h2><h3 id=\"Configuring-environment\"><a href=\"#Configuring-environment\" class=\"headerlink\" title=\"Configuring environment\"></a>Configuring environment</h3><ol>\n<li><p>You need Eclipse Indigo or Juno installed</p>\n</li>\n<li><p>Run Eclipse</p>\n</li>\n<li><p>Install Android Connector for Maven via the Eclipse Marketplace. Select <em>Help -&gt; Eclipse Marketplace…</em> and search for <em>android m2e</em>.</p>\n</li>\n<li><p>Click the Install button next to the Android Connector for Maven that appears and follow the path through the wizard dialog to install the plug-in and its dependencies (including the Android Development Toolkit and the Maven for Eclipse m2e plug-in). Accept the terms-and-conditions and click <em>Finish</em>.</p>\n</li>\n<li><p>Create <em>ANDROID_HOME</em> environmental variable and assign location of the Android SDK into it.</p>\n<ol>\n<li>Click <em>Start</em> button</li>\n<li>Right click on the Computer and choose <em>Properties</em></li>\n<li>Choose <em>Advanced system settings</em></li>\n<li>Click <em>Environment Variables…</em></li>\n<li>Click <em>New</em> below <em>System variables</em> window.</li>\n<li>Variable name should be: <em>ANDROID_HOME</em>.</li>\n<li>Variable value should be location of the directory containing Android SDK.</li>\n</ol>\n</li>\n<li><p>Click OK and save your data.</p>\n</li>\n<li><p>Go to the following website: <a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org/</a></p>\n</li>\n<li><p>Go to the download section (<a href=\"http://maven.apache.org/download.html\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org/download.html</a>) and download Maven (version 3.0.4 is preferred – Binary zip)</p>\n</li>\n<li><p>Extract zip archive and copy <em>apache-maven-3.0.4</em> directory into <em>C:</em> drive.</p>\n</li>\n<li><p>Location of the extracted directory should be as follows: <em>C:\\apache-maven-3.0.4\\</em></p>\n</li>\n<li><p>Add <em>C:\\apache-maven-3.0.4\\bin</em> directory to the environmental variable called <em>Path</em></p>\n<ol>\n<li>Click <em>Start</em> button</li>\n<li>Right click on the <em>Computer</em> and choose <em>Properties</em></li>\n<li>Choose <em>Advanced system settings</em></li>\n<li>Click <em>Environment Variables…</em></li>\n<li>Find <em>Path</em> variable and and click <em>Edit</em></li>\n<li>After semicolon (;) add path to the directory containing batch script inside the maven directory which should be as follows: <em>C:\\apache-maven-3.0.4\\bin</em></li>\n<li>Click <em>OK</em> and save your data.</li>\n</ol>\n</li>\n<li><p>Add <em>platform-tools</em> directory from Android SDK directory to the <em>Path</em> environmental variable respectively.</p>\n</li>\n<li><p>Click <em>Start</em> button and then choose Run option (click <em>Windows button + R</em> key on your keyboard) and type: <em>cmd</em>.</p>\n</li>\n<li><p>Type: <em>mvn –v</em></p>\n</li>\n<li><p>The returned output should be as follows:</p>\n<ul>\n<li>Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100)<br>Maven home: C:\\apache-maven-3.0.4\\bin\\..<br>Java version: 1.6.0_33, vendor: Sun Microsystems Inc.<br>Java home: C:\\Program Files (x86)\\Java\\jdk1.6.0_33\\jre<br>Default locale: en_US, platform encoding: Cp1252<br>OS name: “windows 7”, version: “6.1”, arch: “x86”, family: “windows”</li>\n</ul>\n</li>\n<li><p>Now Maven should be properly configured and prepared for deployment of the Android applications.</p>\n</li>\n</ol>\n<h2 id=\"Importing-building-and-running-sample-Maven-Android-project\"><a href=\"#Importing-building-and-running-sample-Maven-Android-project\" class=\"headerlink\" title=\"Importing, building and running sample Maven Android project\"></a>Importing, building and running sample Maven Android project</h2><ol>\n<li>Download samples from the stable branch on the website: <a href=\"http://code.google.com/p/maven-android-plugin/wiki/Samples\" target=\"_blank\" rel=\"noopener\">http://code.google.com/p/maven-android-plugin/wiki/Samples</a></li>\n<li>Extract downloaded archive.</li>\n<li>Open Eclipse IDE.</li>\n<li>Import <em>helloflashlight</em> project (as an Android project).</li>\n<li>Right click on the project.</li>\n<li>Choose an option <em>Configure -&gt; Convert to Maven Project</em>.</li>\n<li>Dependencies and project configuration are defined in <em>pom.xml</em> file.</li>\n<li>Click <em>Start</em> button and then choose Run option (click <em>Windows button + R</em> key on your keyboard) and type: <em>cmd</em>.</li>\n<li>Go to the directory, where the current project (<em>helloflashlight</em>) is located.</li>\n<li>Type in the command line: <em>mvn clean install</em></li>\n<li>Command from previous point will create <em>.apk</em> file in the target folder.</li>\n<li>Type in the command line: <em>mvn android:deploy</em></li>\n<li>Command from previous point will install the application via Maven on your Android device or Android emulator (virtual device). If more than one device is available, you can specify the relevant device in your <em>pom.xml</em> file. Maven can also start and stop an Android virtual device automatically for you.</li>\n<li>You can start the application via Maven by typing the following command: <em>mvn android:run</em></li>\n</ol>\n<h2 id=\"Summary-Pros-amp-Cons\"><a href=\"#Summary-Pros-amp-Cons\" class=\"headerlink\" title=\"Summary - Pros &amp; Cons\"></a>Summary - Pros &amp; Cons</h2><h3 id=\"Pros\"><a href=\"#Pros\" class=\"headerlink\" title=\"Pros\"></a>Pros</h3><ul>\n<li>Uniform build system.</li>\n<li>No need to search for external libraries.</li>\n<li>Good quality project information.</li>\n<li>Transparent migration to new features.</li>\n<li>Single project configuration for libraries in team work.</li>\n</ul>\n<h3 id=\"Cons\"><a href=\"#Cons\" class=\"headerlink\" title=\"Cons\"></a>Cons</h3><ul>\n<li>Libraries in the repository are not always up to date.</li>\n<li>Project configuration takes more time.</li>\n<li>Mistakes in pom.xml file are not detected by IDE, but can cause fail of the build.</li>\n<li>Necessity of using CLI (Command Line Interface) in some cases.</li>\n</ul>\n<h2 id=\"Additional-resources-amp-references\"><a href=\"#Additional-resources-amp-references\" class=\"headerlink\" title=\"Additional resources &amp; references\"></a>Additional resources &amp; references</h2><ol>\n<li><a href=\"http://www.sonatype.com/books/mvnref-book/reference/\" target=\"_blank\" rel=\"noopener\">Maven reference book</a></li>\n<li><a href=\"http://www.sonatype.com/books/mvnref-book/reference/android-dev.html\" target=\"_blank\" rel=\"noopener\">Maven reference book – Android Development Section</a></li>\n<li><a href=\"http://code.google.com/p/maven-android-plugin/\" target=\"_blank\" rel=\"noopener\">Maven Android Plugin</a></li>\n<li><a href=\"http://www.vogella.com/articles/AndroidBuildMaven/article.html\" target=\"_blank\" rel=\"noopener\">Vogella’s article about Maven &amp; Android</a></li>\n<li><a href=\"http://rgladwell.github.com/m2e-android/\" target=\"_blank\" rel=\"noopener\">Eclipse plugin for Maven Android projects</a></li>\n<li><a href=\"http://mvnrepository.com/\" target=\"_blank\" rel=\"noopener\">Maven repository</a></li>\n</ol>\n","more":"<h2 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h2><h3 id=\"Etymology\"><a href=\"#Etymology\" class=\"headerlink\" title=\"Etymology\"></a>Etymology</h3><p>Maven, a <a href=\"http://en.wikipedia.org/wiki/Maven\" target=\"_blank\" rel=\"noopener\">Yiddish</a> word meaning accumulator of knowledge.</p>\n<h3 id=\"What-is-Maven\"><a href=\"#What-is-Maven\" class=\"headerlink\" title=\"What is Maven?\"></a>What is Maven?</h3><p><a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">Maven</a> is a tool that can be used for building and managing any Java-based project with all its dependencies (libraries).</p>\n<h3 id=\"Maven’s-objectives\"><a href=\"#Maven’s-objectives\" class=\"headerlink\" title=\"Maven’s objectives\"></a>Maven’s objectives</h3><ul>\n<li>Making build process easy</li>\n<li>Providing uniform build system (Project Object Model)</li>\n<li>Providing quality project information</li>\n<li>Providing guidelines for best practices development</li>\n<li>Allowing transparent migration to new features</li>\n</ul>\n<h2 id=\"Setting-up-Maven-Android-projects-on-MS-Windows\"><a href=\"#Setting-up-Maven-Android-projects-on-MS-Windows\" class=\"headerlink\" title=\"Setting up Maven Android projects on MS Windows\"></a>Setting up Maven Android projects on MS Windows</h2><h3 id=\"Configuring-environment\"><a href=\"#Configuring-environment\" class=\"headerlink\" title=\"Configuring environment\"></a>Configuring environment</h3><ol>\n<li><p>You need Eclipse Indigo or Juno installed</p>\n</li>\n<li><p>Run Eclipse</p>\n</li>\n<li><p>Install Android Connector for Maven via the Eclipse Marketplace. Select <em>Help -&gt; Eclipse Marketplace…</em> and search for <em>android m2e</em>.</p>\n</li>\n<li><p>Click the Install button next to the Android Connector for Maven that appears and follow the path through the wizard dialog to install the plug-in and its dependencies (including the Android Development Toolkit and the Maven for Eclipse m2e plug-in). Accept the terms-and-conditions and click <em>Finish</em>.</p>\n</li>\n<li><p>Create <em>ANDROID_HOME</em> environmental variable and assign location of the Android SDK into it.</p>\n<ol>\n<li>Click <em>Start</em> button</li>\n<li>Right click on the Computer and choose <em>Properties</em></li>\n<li>Choose <em>Advanced system settings</em></li>\n<li>Click <em>Environment Variables…</em></li>\n<li>Click <em>New</em> below <em>System variables</em> window.</li>\n<li>Variable name should be: <em>ANDROID_HOME</em>.</li>\n<li>Variable value should be location of the directory containing Android SDK.</li>\n</ol>\n</li>\n<li><p>Click OK and save your data.</p>\n</li>\n<li><p>Go to the following website: <a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org/</a></p>\n</li>\n<li><p>Go to the download section (<a href=\"http://maven.apache.org/download.html\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org/download.html</a>) and download Maven (version 3.0.4 is preferred – Binary zip)</p>\n</li>\n<li><p>Extract zip archive and copy <em>apache-maven-3.0.4</em> directory into <em>C:</em> drive.</p>\n</li>\n<li><p>Location of the extracted directory should be as follows: <em>C:\\apache-maven-3.0.4\\</em></p>\n</li>\n<li><p>Add <em>C:\\apache-maven-3.0.4\\bin</em> directory to the environmental variable called <em>Path</em></p>\n<ol>\n<li>Click <em>Start</em> button</li>\n<li>Right click on the <em>Computer</em> and choose <em>Properties</em></li>\n<li>Choose <em>Advanced system settings</em></li>\n<li>Click <em>Environment Variables…</em></li>\n<li>Find <em>Path</em> variable and and click <em>Edit</em></li>\n<li>After semicolon (;) add path to the directory containing batch script inside the maven directory which should be as follows: <em>C:\\apache-maven-3.0.4\\bin</em></li>\n<li>Click <em>OK</em> and save your data.</li>\n</ol>\n</li>\n<li><p>Add <em>platform-tools</em> directory from Android SDK directory to the <em>Path</em> environmental variable respectively.</p>\n</li>\n<li><p>Click <em>Start</em> button and then choose Run option (click <em>Windows button + R</em> key on your keyboard) and type: <em>cmd</em>.</p>\n</li>\n<li><p>Type: <em>mvn –v</em></p>\n</li>\n<li><p>The returned output should be as follows:</p>\n<ul>\n<li>Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100)<br>Maven home: C:\\apache-maven-3.0.4\\bin\\..<br>Java version: 1.6.0_33, vendor: Sun Microsystems Inc.<br>Java home: C:\\Program Files (x86)\\Java\\jdk1.6.0_33\\jre<br>Default locale: en_US, platform encoding: Cp1252<br>OS name: “windows 7”, version: “6.1”, arch: “x86”, family: “windows”</li>\n</ul>\n</li>\n<li><p>Now Maven should be properly configured and prepared for deployment of the Android applications.</p>\n</li>\n</ol>\n<h2 id=\"Importing-building-and-running-sample-Maven-Android-project\"><a href=\"#Importing-building-and-running-sample-Maven-Android-project\" class=\"headerlink\" title=\"Importing, building and running sample Maven Android project\"></a>Importing, building and running sample Maven Android project</h2><ol>\n<li>Download samples from the stable branch on the website: <a href=\"http://code.google.com/p/maven-android-plugin/wiki/Samples\" target=\"_blank\" rel=\"noopener\">http://code.google.com/p/maven-android-plugin/wiki/Samples</a></li>\n<li>Extract downloaded archive.</li>\n<li>Open Eclipse IDE.</li>\n<li>Import <em>helloflashlight</em> project (as an Android project).</li>\n<li>Right click on the project.</li>\n<li>Choose an option <em>Configure -&gt; Convert to Maven Project</em>.</li>\n<li>Dependencies and project configuration are defined in <em>pom.xml</em> file.</li>\n<li>Click <em>Start</em> button and then choose Run option (click <em>Windows button + R</em> key on your keyboard) and type: <em>cmd</em>.</li>\n<li>Go to the directory, where the current project (<em>helloflashlight</em>) is located.</li>\n<li>Type in the command line: <em>mvn clean install</em></li>\n<li>Command from previous point will create <em>.apk</em> file in the target folder.</li>\n<li>Type in the command line: <em>mvn android:deploy</em></li>\n<li>Command from previous point will install the application via Maven on your Android device or Android emulator (virtual device). If more than one device is available, you can specify the relevant device in your <em>pom.xml</em> file. Maven can also start and stop an Android virtual device automatically for you.</li>\n<li>You can start the application via Maven by typing the following command: <em>mvn android:run</em></li>\n</ol>\n<h2 id=\"Summary-Pros-amp-Cons\"><a href=\"#Summary-Pros-amp-Cons\" class=\"headerlink\" title=\"Summary - Pros &amp; Cons\"></a>Summary - Pros &amp; Cons</h2><h3 id=\"Pros\"><a href=\"#Pros\" class=\"headerlink\" title=\"Pros\"></a>Pros</h3><ul>\n<li>Uniform build system.</li>\n<li>No need to search for external libraries.</li>\n<li>Good quality project information.</li>\n<li>Transparent migration to new features.</li>\n<li>Single project configuration for libraries in team work.</li>\n</ul>\n<h3 id=\"Cons\"><a href=\"#Cons\" class=\"headerlink\" title=\"Cons\"></a>Cons</h3><ul>\n<li>Libraries in the repository are not always up to date.</li>\n<li>Project configuration takes more time.</li>\n<li>Mistakes in pom.xml file are not detected by IDE, but can cause fail of the build.</li>\n<li>Necessity of using CLI (Command Line Interface) in some cases.</li>\n</ul>\n<h2 id=\"Additional-resources-amp-references\"><a href=\"#Additional-resources-amp-references\" class=\"headerlink\" title=\"Additional resources &amp; references\"></a>Additional resources &amp; references</h2><ol>\n<li><a href=\"http://www.sonatype.com/books/mvnref-book/reference/\" target=\"_blank\" rel=\"noopener\">Maven reference book</a></li>\n<li><a href=\"http://www.sonatype.com/books/mvnref-book/reference/android-dev.html\" target=\"_blank\" rel=\"noopener\">Maven reference book – Android Development Section</a></li>\n<li><a href=\"http://code.google.com/p/maven-android-plugin/\" target=\"_blank\" rel=\"noopener\">Maven Android Plugin</a></li>\n<li><a href=\"http://www.vogella.com/articles/AndroidBuildMaven/article.html\" target=\"_blank\" rel=\"noopener\">Vogella’s article about Maven &amp; Android</a></li>\n<li><a href=\"http://rgladwell.github.com/m2e-android/\" target=\"_blank\" rel=\"noopener\">Eclipse plugin for Maven Android projects</a></li>\n<li><a href=\"http://mvnrepository.com/\" target=\"_blank\" rel=\"noopener\">Maven repository</a></li>\n</ol>\n","categories":[],"tags":[{"name":"android","path":"api/tags/android.json"},{"name":"maven","path":"api/tags/maven.json"}]}